{
  "contractName": "SupplyChain",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "role",
              "type": "uint8"
            },
            {
              "name": "id_",
              "type": "address"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "email",
              "type": "string"
            },
            {
              "name": "isValue",
              "type": "bool"
            }
          ],
          "name": "user",
          "type": "tuple"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb935dc37"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id_lot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "barcodeId",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "lot_user_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "source",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "variety",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "quality",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "temprature",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "humidity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "NewLot",
      "type": "event",
      "signature": "0xadad6db1d679a6c001629a71751b484c6ce3cc054bb9ade7a55e3336504ec7e8"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "email",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "role",
          "type": "uint8"
        }
      ],
      "name": "NewUser",
      "type": "event",
      "signature": "0x71d9dffdac919adfd06ab94bdebcd997efa2ba73e829a41e63107c7f8ae330f6"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "email",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "role",
          "type": "uint8"
        }
      ],
      "name": "LostUser",
      "type": "event",
      "signature": "0xb918a61d17a424319d1b79318e497219d4dcd8818cb165287ba99466d1163772"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "id_lot",
              "type": "uint256"
            },
            {
              "name": "barcodeId",
              "type": "string"
            },
            {
              "name": "lot_user_addr",
              "type": "address"
            },
            {
              "name": "source",
              "type": "string"
            },
            {
              "name": "variety",
              "type": "string"
            },
            {
              "name": "quality",
              "type": "string"
            },
            {
              "name": "temprature",
              "type": "uint256"
            },
            {
              "name": "humidity",
              "type": "uint256"
            },
            {
              "name": "date",
              "type": "uint256"
            },
            {
              "name": "stockdate",
              "type": "uint256"
            }
          ],
          "name": "lot_",
          "type": "tuple"
        },
        {
          "name": "currentTime_",
          "type": "uint256"
        }
      ],
      "name": "addLot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x92c5da5d"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "buyer",
              "type": "address"
            },
            {
              "name": "receiver",
              "type": "address"
            },
            {
              "name": "transferdate",
              "type": "string"
            },
            {
              "name": "price",
              "type": "uint256"
            },
            {
              "name": "type_",
              "type": "uint8"
            }
          ],
          "name": "transaction_",
          "type": "tuple"
        },
        {
          "name": "barcodeId_",
          "type": "string"
        },
        {
          "name": "currentTime_",
          "type": "uint256"
        }
      ],
      "name": "addTransaction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x32f3adf5"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "barcodeId_",
          "type": "string"
        },
        {
          "name": "newStockDate",
          "type": "uint256"
        }
      ],
      "name": "updateStockdate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x5a3d3a6f"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllTransactions",
      "outputs": [
        {
          "components": [
            {
              "name": "buyer",
              "type": "address"
            },
            {
              "name": "receiver",
              "type": "address"
            },
            {
              "name": "transferdate",
              "type": "string"
            },
            {
              "name": "price",
              "type": "uint256"
            },
            {
              "name": "type_",
              "type": "uint8"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x27506f53"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllLots",
      "outputs": [
        {
          "components": [
            {
              "name": "id_lot",
              "type": "uint256"
            },
            {
              "name": "barcodeId",
              "type": "string"
            },
            {
              "name": "lot_user_addr",
              "type": "address"
            },
            {
              "name": "source",
              "type": "string"
            },
            {
              "name": "variety",
              "type": "string"
            },
            {
              "name": "quality",
              "type": "string"
            },
            {
              "name": "temprature",
              "type": "uint256"
            },
            {
              "name": "humidity",
              "type": "uint256"
            },
            {
              "name": "date",
              "type": "uint256"
            },
            {
              "name": "stockdate",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8e3bea6f"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMyAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x9a166299"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMyLots",
      "outputs": [
        {
          "components": [
            {
              "name": "id_lot",
              "type": "uint256"
            },
            {
              "name": "barcodeId",
              "type": "string"
            },
            {
              "name": "lot_user_addr",
              "type": "address"
            },
            {
              "name": "source",
              "type": "string"
            },
            {
              "name": "variety",
              "type": "string"
            },
            {
              "name": "quality",
              "type": "string"
            },
            {
              "name": "temprature",
              "type": "uint256"
            },
            {
              "name": "humidity",
              "type": "uint256"
            },
            {
              "name": "date",
              "type": "uint256"
            },
            {
              "name": "stockdate",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x612fc906"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "barcodeId_",
          "type": "string"
        }
      ],
      "name": "getSingleLot",
      "outputs": [
        {
          "components": [
            {
              "name": "id_lot",
              "type": "uint256"
            },
            {
              "name": "barcodeId",
              "type": "string"
            },
            {
              "name": "lot_user_addr",
              "type": "address"
            },
            {
              "name": "source",
              "type": "string"
            },
            {
              "name": "variety",
              "type": "string"
            },
            {
              "name": "quality",
              "type": "string"
            },
            {
              "name": "temprature",
              "type": "uint256"
            },
            {
              "name": "humidity",
              "type": "uint256"
            },
            {
              "name": "date",
              "type": "uint256"
            },
            {
              "name": "stockdate",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe378e47f"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "barcodeId_",
          "type": "string"
        }
      ],
      "name": "getSingleLotHistory",
      "outputs": [
        {
          "components": [
            {
              "name": "id_lot",
              "type": "uint256"
            },
            {
              "name": "barcodeId",
              "type": "string"
            },
            {
              "name": "lot_user_addr",
              "type": "address"
            },
            {
              "name": "source",
              "type": "string"
            },
            {
              "name": "variety",
              "type": "string"
            },
            {
              "name": "quality",
              "type": "string"
            },
            {
              "name": "temprature",
              "type": "uint256"
            },
            {
              "name": "humidity",
              "type": "uint256"
            },
            {
              "name": "date",
              "type": "uint256"
            },
            {
              "name": "stockdate",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "name": "id_",
                  "type": "address"
                },
                {
                  "name": "date",
                  "type": "uint256"
                },
                {
                  "name": "stockdate",
                  "type": "uint256"
                },
                {
                  "name": "action",
                  "type": "uint8"
                }
              ],
              "name": "usershistory",
              "type": "tuple[]"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x26538233"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "id_",
          "type": "address"
        }
      ],
      "name": "getUserDetails",
      "outputs": [
        {
          "components": [
            {
              "name": "role",
              "type": "uint8"
            },
            {
              "name": "id_",
              "type": "address"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "email",
              "type": "string"
            },
            {
              "name": "isValue",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xcc3d967b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMyDetails",
      "outputs": [
        {
          "components": [
            {
              "name": "role",
              "type": "uint8"
            },
            {
              "name": "id_",
              "type": "address"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "email",
              "type": "string"
            },
            {
              "name": "isValue",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x431bbb7e"
    }
  ],
  "bytecode": "0x60806040526200000e620002ce565b506040805160a081018252600180825273404bec9172f4c55790e9f2d9dbbdbc5feb4d215c60208084019190915283518085018552600381527f496f54000000000000000000000000000000000000000000000000000000000081830152838501528351808501909452600f84527f496f54406578616d706c652e636f6d00000000000000000000000000000000009084015260608201929092526080810191909152620000bb620002ce565b506040805160a081018252600280825273f0fe51d2f0a1b450ba6f4c03603b78a932fe771f602080840191909152835180850185529182527f4442000000000000000000000000000000000000000000000000000000000000828201528284019190915282518084018452600e81527f4442406578616d706c652e636f6d00000000000000000000000000000000000081830152606083015260016080830181905284820151600160a060020a03166000908152918290529290208351815492938593839160ff19909116908360048111156200019457fe5b02179055506020828101518254600160a060020a039091166101000261010060a860020a031990911617825560408301518051620001d99260018501920190620002fd565b5060608201518051620001f7916002840191602090910190620002fd565b50608091909101516003909101805491151560ff19928316179055602080830151600160a060020a03166000908152908190526040902082518154849383911660018360048111156200024657fe5b02179055506020828101518254600160a060020a039091166101000261010060a860020a0319909116178255604083015180516200028b9260018501920190620002fd565b5060608201518051620002a9916002840191602090910190620002fd565b50608091909101516003909101805460ff191691151591909117905550620003a29050565b6040805160a0810190915280600081526000602082018190526060604083018190528083015260809091015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034057805160ff191683800117855562000370565b8280016001018555821562000370579182015b828111156200037057825182559160200191906001019062000353565b506200037e92915062000382565b5090565b6200039f91905b808211156200037e576000815560010162000389565b90565b6136a680620003b26000396000f3fe6080604052600436106100b95763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632653823381146100be57806327506f53146100f557806332f3adf514610117578063431bbb7e146101395780635a3d3a6f1461015b578063612fc9061461017b5780638e3bea6f1461019d57806392c5da5d146101b25780639a166299146101d2578063b935dc37146101f4578063cc3d967b14610214578063e378e47f14610234575b600080fd5b3480156100ca57600080fd5b506100de6100d9366004612cce565b610261565b6040516100ec929190613491565b60405180910390f35b34801561010157600080fd5b5061010a6103b6565b6040516100ec91906133cb565b34801561012357600080fd5b50610137610132366004612d8a565b6104fa565b005b34801561014557600080fd5b5061014e610541565b6040516100ec91906134b6565b34801561016757600080fd5b50610137610176366004612d03565b61070d565b34801561018757600080fd5b506101906107d0565b6040516100ec91906133ba565b3480156101a957600080fd5b50610190610817565b3480156101be57600080fd5b506101376101cd366004612d54565b610b13565b3480156101de57600080fd5b506101e7610bc0565b6040516100ec91906133ac565b34801561020057600080fd5b5061013761020f366004612e06565b610bc4565b34801561022057600080fd5b5061014e61022f366004612ca8565b610cfd565b34801561024057600080fd5b5061025461024f366004612cce565b610edf565b6040516100ec9190613480565b61026961282e565b61027161288b565b8261037a6003826040518082805190602001908083835b602083106102a75780518252601f199092019160209182019101610288565b518151600019602094850361010090810a8201928316921993909316919091179092529490920196875260408051978890038201882060019081018054601f6002938216159098029095019094160494850182900482028801820190528387529094509192505083018282801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b50505050506020604051908101604052806000815250610f4c565b156103a35760405160e560020a62461bcd02815260040161039a90613450565b60405180910390fd5b6103ac84611034565b9250925050915091565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156104f05760008481526020908190206040805160a081018252600586029092018054600160a060020a039081168452600180830154909116848601526002808301805485516101009482161594909402600019011691909104601f81018790048702830187018552808352949592949386019391929091908301828280156104a75780601f1061047c576101008083540402835291602001916104a7565b820191906000526020600020905b81548152906001019060200180831161048a57829003601f168201915b505050918352505060038201546020820152600482015460409091019060ff1660028111156104d257fe5b60028111156104dd57fe5b81525050815260200190600101906103da565b5050505090505b90565b3360009081526020819052604090206003015460ff1615156105315760405160e560020a62461bcd02815260040161039a90613460565b61053c83838361146e565b505050565b61054961289d565b3360009081526020819052604090206003015460ff1615156105805760405160e560020a62461bcd02815260040161039a90613460565b3360009081526020819052604090819020815160a081019092528054829060ff1660048111156105ac57fe5b60048111156105b757fe5b8152815461010090819004600160a060020a031660208084019190915260018085018054604080516002948316159096026000190190911692909204601f8101849004840285018401835280855291909401939183018282801561065c5780601f106106315761010080835404028352916020019161065c565b820191906000526020600020905b81548152906001019060200180831161063f57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156106ee5780601f106106c3576101008083540402835291602001916106ee565b820191906000526020600020905b8154815290600101906020018083116106d157829003601f168201915b50505091835250506003919091015460ff161515602090910152905090565b3360009081526020819052604090206003015460ff1615156107445760405160e560020a62461bcd02815260040161039a90613460565b600233151561075257600080fd5b336000908152602081905260409020546101009004600160a060020a0316158015906107a5575080600481111561078557fe5b3360009081526020819052604090205460ff1660048111156107a357fe5b145b15156107c65760405160e560020a62461bcd02815260040161039a90613410565b61053c83836119d3565b3360009081526020819052604090206003015460609060ff16151561080a5760405160e560020a62461bcd02815260040161039a90613460565b610812611bad565b905090565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156104f057838290600052602060002090600a0201610140604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109035780601f106108d857610100808354040283529160200191610903565b820191906000526020600020905b8154815290600101906020018083116108e657829003601f168201915b5050509183525050600282810154600160a060020a031660208084019190915260038401805460408051601f600019600185161561010002019093169590950491820184900484028501840181528185529094019390918301828280156109ab5780601f10610980576101008083540402835291602001916109ab565b820191906000526020600020905b81548152906001019060200180831161098e57829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015610a3f5780601f10610a1457610100808354040283529160200191610a3f565b820191906000526020600020905b815481529060010190602001808311610a2257829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015610ad35780601f10610aa857610100808354040283529160200191610ad3565b820191906000526020600020905b815481529060010190602001808311610ab657829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820154815250508152602001906001019061083b565b3360009081526020819052604090206003015460ff161515610b4a5760405160e560020a62461bcd02815260040161039a90613460565b60013360009081526020819052604090205460ff166004811115610b6a57fe5b1480610b9157503360009081526020819052604081205460ff166004811115610b8f57fe5b145b1515610bb25760405160e560020a62461bcd02815260040161039a90613470565b610bbc8282612010565b5050565b3390565b610bd6816000015182602001516124a7565b15610bf65760405160e560020a62461bcd02815260040161039a90613440565b602080820151600160a060020a0316600090815290819052604090208151815483929190829060ff19166001836004811115610c2e57fe5b02179055506020828101518254600160a060020a039091166101000274ffffffffffffffffffffffffffffffffffffffff001990911617825560408301518051610c7e92600185019201906128cc565b5060608201518051610c9a9160028401916020909101906128cc565b50608091909101516003909101805460ff19169115159190911790556040818101516060830151835192517f71d9dffdac919adfd06ab94bdebcd997efa2ba73e829a41e63107c7f8ae330f693610cf29392916133dc565b60405180910390a150565b610d0561289d565b600160a060020a038216600090815260208190526040902060030154829060ff161515610d475760405160e560020a62461bcd02815260040161039a90613460565b600160a060020a03831660009081526020819052604090819020815160a081019092528054829060ff166004811115610d7c57fe5b6004811115610d8757fe5b8152815461010090819004600160a060020a031660208084019190915260018085018054604080516002948316159096026000190190911692909204601f81018490048402850184018352808552919094019391830182828015610e2c5780601f10610e0157610100808354040283529160200191610e2c565b820191906000526020600020905b815481529060010190602001808311610e0f57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015610ebe5780601f10610e9357610100808354040283529160200191610ebe565b820191906000526020600020905b815481529060010190602001808311610ea157829003601f168201915b50505091835250506003919091015460ff1615156020909101529392505050565b610ee761282e565b81610f1c600382604051808280519060200190808383602083106102a75780518252601f199092019160209182019101610288565b15610f3c5760405160e560020a62461bcd02815260040161039a90613450565b610f4583612522565b9392505050565b6000816040516020018082805190602001908083835b60208310610f815780518252601f199092019160209182019101610f62565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120836040516020018082805190602001908083835b60208310610fef5780518252601f199092019160209182019101610fd0565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201490505b92915050565b61103c61282e565b61104461288b565b6003836040518082805190602001908083835b602083106110765780518252601f199092019160209182019101611057565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810184208751909460059450889350918291908401908083835b602083106110d65780518252601f1990920191602091820191016110b7565b518151602093840361010090810a600019908101801990941693909216929092179092529290940196875260408051978890038201882061014089018252895489526001808b018054845160029382161590970290980190971604601f810184900484028501840190925281845297965088955086820194929350908301828280156111a35780601f10611178576101008083540402835291602001916111a3565b820191906000526020600020905b81548152906001019060200180831161118657829003601f168201915b5050509183525050600282810154600160a060020a031660208084019190915260038401805460408051601f6000196001851615610100020190931695909504918201849004840285018401815281855290940193909183018282801561124b5780601f106112205761010080835404028352916020019161124b565b820191906000526020600020905b81548152906001019060200180831161122e57829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156112df5780601f106112b4576101008083540402835291602001916112df565b820191906000526020600020905b8154815290600101906020018083116112c257829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156113735780601f1061134857610100808354040283529160200191611373565b820191906000526020600020905b81548152906001019060200180831161135657829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820154815250509150806020604051908101604052908160008201805480602002602001604051908101604052809291908181526020016000905b8282101561145c57600084815260209081902060408051608081018252600486029092018054600160a060020a03168352600181015493830193909352600280840154918301919091526003830154919291606084019160ff9091169081111561143e57fe5b600281111561144957fe5b81525050815260200190600101906113d8565b50505091525092945092505050915091565b816114a3600382604051808280519060200190808383602083106102a75780518252601f199092019160209182019101610288565b156114c35760405160e560020a62461bcd02815260040161039a90613450565b600280546001810180835560009290925285517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace6005909202918201805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a039384161782556020808a01517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf8601805490931694169390931790556040880151805189949293611597937f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0019201906128cc565b5060608201516003820155608082015160048201805460ff191660018360028111156115bf57fe5b02179055505050506115cf61282e565b6003846040518082805190602001908083835b602083106116015780518252601f1990920191602091820191016115e2565b518151602093840361010090810a6000199081018019909416939092169290921790925292909401968752604080519788900382018820610140890182528054895260018082018054845160029382161590970290980190971604601f810184900484028501840190925281845296508782019550919392508301828280156116cb5780601f106116a0576101008083540402835291602001916116cb565b820191906000526020600020905b8154815290600101906020018083116116ae57829003601f168201915b5050509183525050600282810154600160a060020a031660208084019190915260038401805460408051601f600019600185161561010002019093169590950491820184900484028501840181528185529094019390918301828280156117735780601f1061174857610100808354040283529160200191611773565b820191906000526020600020905b81548152906001019060200180831161175657829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156118075780601f106117dc57610100808354040283529160200191611807565b820191906000526020600020905b8154815290600101906020018083116117ea57829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815293820193929183018282801561189b5780601f106118705761010080835404028352916020019161189b565b820191906000526020600020905b81548152906001019060200180831161187e57829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820154815250509050600581602001516040518082805190602001908083835b602083106119045780518252601f1990920191602091820191016118e5565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201852060808601825233865285830189815260009287018381526001606089018181528454808301808755958752969095208951600490970201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0390971696909617865591518583015551600280860191909155925160038501805493989750949550939260ff199092169184908111156119c457fe5b02179055505050505050505050565b81611a08600382604051808280519060200190808383602083106102a75780518252601f199092019160209182019101610288565b15611a285760405160e560020a62461bcd02815260040161039a90613450565b60006003846040518082805190602001908083835b60208310611a5c5780518252601f199092019160209182019101611a3d565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092209250611a95915061294a9050565b6040805160808101825233815242602082015290810185905260608101600281525090506005826001016040518082805460018160011615610100020316600290048015611b1a5780601f10611af8576101008083540402835291820191611b1a565b820191906000526020600020905b815481529060010190602001808311611b06575b505092835250506040805160209281900383019020805460018082018084556000938452928590208651600490930201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909316929092178255938501518185015591840151600280840191909155606085015160038401805493958795949293919260ff19169184908111156119c457fe5b3360009081526004602090815260408083208054825181850281018501909352808352606094859484015b82821015611c835760008481526020908190208301805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015611c6f5780601f10611c4457610100808354040283529160200191611c6f565b820191906000526020600020905b815481529060010190602001808311611c5257829003601f168201915b505050505081526020019060010190611bd8565b50505050905060608151604051908082528060200260200182016040528015611cc657816020015b611cb361282e565b815260200190600190039081611cab5790505b50905060005b82518110156120095760038382815181101515611ce557fe5b906020019060200201516040518082805190602001908083835b60208310611d1e5780518252601f199092019160209182019101611cff565b518151602093840361010090810a6000199081018019909416939092169290921790925292909401968752604080519788900382018820610140890182528054895260018082018054845160029382161590970290980190971604601f81018490048402850184019092528184529650878201955091939250830182828015611de85780601f10611dbd57610100808354040283529160200191611de8565b820191906000526020600020905b815481529060010190602001808311611dcb57829003601f168201915b5050509183525050600282810154600160a060020a031660208084019190915260038401805460408051601f60001960018516156101000201909316959095049182018490048402850184018152818552909401939091830182828015611e905780601f10611e6557610100808354040283529160200191611e90565b820191906000526020600020905b815481529060010190602001808311611e7357829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611f245780601f10611ef957610100808354040283529160200191611f24565b820191906000526020600020905b815481529060010190602001808311611f0757829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611fb85780601f10611f8d57610100808354040283529160200191611fb8565b820191906000526020600020905b815481529060010190602001808311611f9b57829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820154815250508282815181101515611ff757fe5b60209081029091010152600101611ccc565b5091505090565b8160200151612049600382604051808280519060200190808383602083106102a75780518252601f199092019160209182019101610288565b151561206a5760405160e560020a62461bcd02815260040161039a90613430565b6040830151600160a060020a031633146120995760405160e560020a62461bcd02815260040161039a90613420565b600180548082018083556000929092528451600a9091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681019182556020808701518051889493612111937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf79091019201906128cc565b50604082015160028201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055606082015180516121609160038401916020909101906128cc565b506080820151805161217c9160048401916020909101906128cc565b5060a082015180516121989160058401916020909101906128cc565b5060c0820151816006015560e082015181600701556101008201518160080155610120820151816009015550505082600384602001516040518082805190602001908083835b602083106121fd5780518252601f1990920191602091820191016121de565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845181558484015180519194612247945060018601935001906128cc565b50604082015160028201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055606082015180516122969160038401916020909101906128cc565b50608082015180516122b29160048401916020909101906128cc565b5060a082015180516122ce9160058401916020909101906128cc565b5060c0820151816006015560e0820151816007015561010082015181600801556101208201518160090155905050600583602001516040518082805190602001908083835b602083106123325780518252601f199092019160209182019101612313565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201852060808601825233865285830188815260009287018381526060880184815283546001808201808755958752969095208951600490960201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909616959095178555915184860155516002808501919091559051600384018054939897509395509360ff19909216919084908111156123f257fe5b021790555050336000908152600460209081526040822087820151815460018101808455928552938390208151929650612434955090930192909101906128cc565b50507fadad6db1d679a6c001629a71751b484c6ce3cc054bb9ade7a55e3336504ec7e8836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b610100015160405161249a999897969594939291906134c7565b60405180910390a1505050565b6000600160a060020a03821615156124be57600080fd5b600160a060020a0382811660009081526020819052604090205461010090041615801590610f4557508260048111156124f357fe5b600160a060020a03831660009081526020819052604090205460ff16600481111561251a57fe5b149392505050565b61252a61282e565b6003826040518082805190602001908083835b6020831061255c5780518252601f19909201916020918201910161253d565b518151602093840361010090810a6000199081018019909416939092169290921790925292909401968752604080519788900382018820610140890182528054895260018082018054845160029382161590970290980190971604601f810184900484028501840190925281845296508782019550919392508301828280156126265780601f106125fb57610100808354040283529160200191612626565b820191906000526020600020905b81548152906001019060200180831161260957829003601f168201915b5050509183525050600282810154600160a060020a031660208084019190915260038401805460408051601f600019600185161561010002019093169590950491820184900484028501840181528185529094019390918301828280156126ce5780601f106126a3576101008083540402835291602001916126ce565b820191906000526020600020905b8154815290600101906020018083116126b157829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156127625780601f1061273757610100808354040283529160200191612762565b820191906000526020600020905b81548152906001019060200180831161274557829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156127f65780601f106127cb576101008083540402835291602001916127f6565b820191906000526020600020905b8154815290600101906020018083116127d957829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820154815250509050919050565b6101406040519081016040528060008152602001606081526020016000600160a060020a03168152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b60408051602081019091526060815290565b6040805160a0810190915280600081526000602082018190526060604083018190528083015260809091015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061290d57805160ff191683800117855561293a565b8280016001018555821561293a579182015b8281111561293a57825182559160200191906001019061291f565b5061294692915061296f565b5090565b6040805160808101825260008082526020820181905291810182905290606082015290565b6104f791905b808211156129465760008155600101612975565b6000610f4582356135c2565b6000610f4582356135cd565b6000610f4582356135f6565b6000610f458235613605565b6000601f820183136129ca57600080fd5b81356129dd6129d882613590565b613569565b915080825260208301602083018583830111156129f957600080fd5b612a0483828461362a565b50505092915050565b60006101408284031215612a2057600080fd5b612a2b610140613569565b90506000612a398484612c9c565b825250602082013567ffffffffffffffff811115612a5657600080fd5b612a62848285016129b9565b6020830152506040612a7684828501612989565b604083015250606082013567ffffffffffffffff811115612a9657600080fd5b612aa2848285016129b9565b606083015250608082013567ffffffffffffffff811115612ac257600080fd5b612ace848285016129b9565b60808301525060a082013567ffffffffffffffff811115612aee57600080fd5b612afa848285016129b9565b60a08301525060c0612b0e84828501612c9c565b60c08301525060e0612b2284828501612c9c565b60e083015250610100612b3784828501612c9c565b61010083015250610120612b4d84828501612c9c565b6101208301525092915050565b600060a08284031215612b6c57600080fd5b612b7660a0613569565b90506000612b848484612989565b8252506020612b9584848301612989565b602083015250604082013567ffffffffffffffff811115612bb557600080fd5b612bc1848285016129b9565b6040830152506060612bd584828501612c9c565b6060830152506080612be9848285016129a1565b60808301525092915050565b600060a08284031215612c0757600080fd5b612c1160a0613569565b90506000612c1f84846129ad565b8252506020612c3084848301612989565b602083015250604082013567ffffffffffffffff811115612c5057600080fd5b612c5c848285016129b9565b604083015250606082013567ffffffffffffffff811115612c7c57600080fd5b612c88848285016129b9565b6060830152506080612be984828501612995565b6000610f4582356104f7565b600060208284031215612cba57600080fd5b6000612cc68484612989565b949350505050565b600060208284031215612ce057600080fd5b813567ffffffffffffffff811115612cf757600080fd5b612cc6848285016129b9565b60008060408385031215612d1657600080fd5b823567ffffffffffffffff811115612d2d57600080fd5b612d39858286016129b9565b9250506020612d4a85828601612c9c565b9150509250929050565b60008060408385031215612d6757600080fd5b823567ffffffffffffffff811115612d7e57600080fd5b612d3985828601612a0d565b600080600060608486031215612d9f57600080fd5b833567ffffffffffffffff811115612db657600080fd5b612dc286828701612b5a565b935050602084013567ffffffffffffffff811115612ddf57600080fd5b612deb868287016129b9565b9250506040612dfc86828701612c9c565b9150509250925092565b600060208284031215612e1857600080fd5b813567ffffffffffffffff811115612e2f57600080fd5b612cc684828501612bf5565b612e44816135c2565b82525050565b6000612e55826135be565b80845260208401935083602082028501612e6e856135b8565b60005b84811015612ea5578383038852612e89838351613196565b9250612e94826135b8565b602098909801979150600101612e71565b50909695505050505050565b6000612ebc826135be565b80845260208401935083602082028501612ed5856135b8565b60005b84811015612ea5578383038852612ef083835161327e565b9250612efb826135b8565b602098909801979150600101612ed8565b6000612f17826135be565b808452602084019350612f29836135b8565b60005b82811015612f5957612f3f868351613353565b612f48826135b8565b608096909601959150600101612f2c565b5093949350505050565b612e44816135cd565b612e4481613614565b612e448161361f565b6000612f89826135be565b808452612f9d816020860160208601613636565b612fa681613662565b9093016020019392505050565b602181527f556e617574686f72697a65642c206e6f7420612064617461626173652075736560208201527f7200000000000000000000000000000000000000000000000000000000000000604082015260600190565b602481527f4f6e6c7920757365722063616e2061646420697473206f776e2075736572277360208201527f206c6f7400000000000000000000000000000000000000000000000000000000604082015260600190565b601781527f6c6f7420646f657320616c726561647920657869737473000000000000000000602082015260400190565b602c81527f53746573736f207574656e746520636f6e2073746573736f2072756f6c6f206760208201527f6961206573697374656e74650000000000000000000000000000000000000000604082015260600190565b601381527f6c6f7420646f6573206e6f742065786973747300000000000000000000000000602082015260400190565b601381527f5573657220646f6573206e6f7420657869737400000000000000000000000000602082015260400190565b601881527f53656e646572206973206e6f7420617574686f72697a65640000000000000000602082015260400190565b805160208084526000919084019061318d8282612f0c565b95945050505050565b80516000906101408401906131ab85826133a3565b50602083015184820360208601526131c38282612f7e565b91505060408301516131d86040860182612e3b565b50606083015184820360608601526131f08282612f7e565b9150506080830151848203608086015261320a8282612f7e565b91505060a083015184820360a08601526132248282612f7e565b91505060c083015161323960c08601826133a3565b5060e083015161324c60e08601826133a3565b506101008301516132616101008601826133a3565b506101208301516132766101208601826133a3565b509392505050565b805160009060a08401906132928582612e3b565b5060208301516132a56020860182612e3b565b50604083015184820360408601526132bd8282612f7e565b91505060608301516132d260608601826133a3565b5060808301516132766080860182612f6c565b805160009060a08401906132f98582612f75565b50602083015161330c6020860182612e3b565b50604083015184820360408601526133248282612f7e565b9150506060830151848203606086015261333e8282612f7e565b91505060808301516132766080860182612f63565b805160808301906133648482612e3b565b50602082015161337760208501826133a3565b50604082015161338a60408501826133a3565b50606082015161339d6060850182612f6c565b50505050565b612e44816104f7565b6020810161102e8284612e3b565b60208082528101610f458184612e4a565b60208082528101610f458184612eb1565b606080825281016133ed8186612f7e565b905081810360208301526134018185612f7e565b9050612cc66040830184612f75565b6020808252810161102e81612fb3565b6020808252810161102e81613009565b6020808252810161102e8161305f565b6020808252810161102e8161308f565b6020808252810161102e816130e5565b6020808252810161102e81613115565b6020808252810161102e81613145565b60208082528101610f458184613196565b604080825281016134a28185613196565b90508181036020830152612cc68184613175565b60208082528101610f4581846132e5565b61012081016134d6828c6133a3565b81810360208301526134e8818b612f7e565b90506134f7604083018a612e3b565b81810360608301526135098189612f7e565b9050818103608083015261351d8188612f7e565b905081810360a08301526135318187612f7e565b905061354060c08301866133a3565b61354d60e08301856133a3565b61355b6101008301846133a3565b9a9950505050505050505050565b60405181810167ffffffffffffffff8111828210171561358857600080fd5b604052919050565b600067ffffffffffffffff8211156135a757600080fd5b506020601f91909101601f19160190565b60200190565b5190565b600061102e826135ea565b151590565b60006003821061294657fe5b60006005821061294657fe5b600160a060020a031690565b60006003821061294657600080fd5b60006005821061294657600080fd5b600061102e826135d2565b600061102e826135de565b82818337506000910152565b60005b83811015613651578181015183820152602001613639565b8381111561339d5750506000910152565b601f01601f19169056fea265627a7a72305820ecc40bc742e45d5e90b57b3ee80f78ea69c22f13b1f8800fc5a2caa824a5586f6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632653823381146100be57806327506f53146100f557806332f3adf514610117578063431bbb7e146101395780635a3d3a6f1461015b578063612fc9061461017b5780638e3bea6f1461019d57806392c5da5d146101b25780639a166299146101d2578063b935dc37146101f4578063cc3d967b14610214578063e378e47f14610234575b600080fd5b3480156100ca57600080fd5b506100de6100d9366004612cce565b610261565b6040516100ec929190613491565b60405180910390f35b34801561010157600080fd5b5061010a6103b6565b6040516100ec91906133cb565b34801561012357600080fd5b50610137610132366004612d8a565b6104fa565b005b34801561014557600080fd5b5061014e610541565b6040516100ec91906134b6565b34801561016757600080fd5b50610137610176366004612d03565b61070d565b34801561018757600080fd5b506101906107d0565b6040516100ec91906133ba565b3480156101a957600080fd5b50610190610817565b3480156101be57600080fd5b506101376101cd366004612d54565b610b13565b3480156101de57600080fd5b506101e7610bc0565b6040516100ec91906133ac565b34801561020057600080fd5b5061013761020f366004612e06565b610bc4565b34801561022057600080fd5b5061014e61022f366004612ca8565b610cfd565b34801561024057600080fd5b5061025461024f366004612cce565b610edf565b6040516100ec9190613480565b61026961282e565b61027161288b565b8261037a6003826040518082805190602001908083835b602083106102a75780518252601f199092019160209182019101610288565b518151600019602094850361010090810a8201928316921993909316919091179092529490920196875260408051978890038201882060019081018054601f6002938216159098029095019094160494850182900482028801820190528387529094509192505083018282801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b50505050506020604051908101604052806000815250610f4c565b156103a35760405160e560020a62461bcd02815260040161039a90613450565b60405180910390fd5b6103ac84611034565b9250925050915091565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156104f05760008481526020908190206040805160a081018252600586029092018054600160a060020a039081168452600180830154909116848601526002808301805485516101009482161594909402600019011691909104601f81018790048702830187018552808352949592949386019391929091908301828280156104a75780601f1061047c576101008083540402835291602001916104a7565b820191906000526020600020905b81548152906001019060200180831161048a57829003601f168201915b505050918352505060038201546020820152600482015460409091019060ff1660028111156104d257fe5b60028111156104dd57fe5b81525050815260200190600101906103da565b5050505090505b90565b3360009081526020819052604090206003015460ff1615156105315760405160e560020a62461bcd02815260040161039a90613460565b61053c83838361146e565b505050565b61054961289d565b3360009081526020819052604090206003015460ff1615156105805760405160e560020a62461bcd02815260040161039a90613460565b3360009081526020819052604090819020815160a081019092528054829060ff1660048111156105ac57fe5b60048111156105b757fe5b8152815461010090819004600160a060020a031660208084019190915260018085018054604080516002948316159096026000190190911692909204601f8101849004840285018401835280855291909401939183018282801561065c5780601f106106315761010080835404028352916020019161065c565b820191906000526020600020905b81548152906001019060200180831161063f57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156106ee5780601f106106c3576101008083540402835291602001916106ee565b820191906000526020600020905b8154815290600101906020018083116106d157829003601f168201915b50505091835250506003919091015460ff161515602090910152905090565b3360009081526020819052604090206003015460ff1615156107445760405160e560020a62461bcd02815260040161039a90613460565b600233151561075257600080fd5b336000908152602081905260409020546101009004600160a060020a0316158015906107a5575080600481111561078557fe5b3360009081526020819052604090205460ff1660048111156107a357fe5b145b15156107c65760405160e560020a62461bcd02815260040161039a90613410565b61053c83836119d3565b3360009081526020819052604090206003015460609060ff16151561080a5760405160e560020a62461bcd02815260040161039a90613460565b610812611bad565b905090565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156104f057838290600052602060002090600a0201610140604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109035780601f106108d857610100808354040283529160200191610903565b820191906000526020600020905b8154815290600101906020018083116108e657829003601f168201915b5050509183525050600282810154600160a060020a031660208084019190915260038401805460408051601f600019600185161561010002019093169590950491820184900484028501840181528185529094019390918301828280156109ab5780601f10610980576101008083540402835291602001916109ab565b820191906000526020600020905b81548152906001019060200180831161098e57829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015610a3f5780601f10610a1457610100808354040283529160200191610a3f565b820191906000526020600020905b815481529060010190602001808311610a2257829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015610ad35780601f10610aa857610100808354040283529160200191610ad3565b820191906000526020600020905b815481529060010190602001808311610ab657829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820154815250508152602001906001019061083b565b3360009081526020819052604090206003015460ff161515610b4a5760405160e560020a62461bcd02815260040161039a90613460565b60013360009081526020819052604090205460ff166004811115610b6a57fe5b1480610b9157503360009081526020819052604081205460ff166004811115610b8f57fe5b145b1515610bb25760405160e560020a62461bcd02815260040161039a90613470565b610bbc8282612010565b5050565b3390565b610bd6816000015182602001516124a7565b15610bf65760405160e560020a62461bcd02815260040161039a90613440565b602080820151600160a060020a0316600090815290819052604090208151815483929190829060ff19166001836004811115610c2e57fe5b02179055506020828101518254600160a060020a039091166101000274ffffffffffffffffffffffffffffffffffffffff001990911617825560408301518051610c7e92600185019201906128cc565b5060608201518051610c9a9160028401916020909101906128cc565b50608091909101516003909101805460ff19169115159190911790556040818101516060830151835192517f71d9dffdac919adfd06ab94bdebcd997efa2ba73e829a41e63107c7f8ae330f693610cf29392916133dc565b60405180910390a150565b610d0561289d565b600160a060020a038216600090815260208190526040902060030154829060ff161515610d475760405160e560020a62461bcd02815260040161039a90613460565b600160a060020a03831660009081526020819052604090819020815160a081019092528054829060ff166004811115610d7c57fe5b6004811115610d8757fe5b8152815461010090819004600160a060020a031660208084019190915260018085018054604080516002948316159096026000190190911692909204601f81018490048402850184018352808552919094019391830182828015610e2c5780601f10610e0157610100808354040283529160200191610e2c565b820191906000526020600020905b815481529060010190602001808311610e0f57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015610ebe5780601f10610e9357610100808354040283529160200191610ebe565b820191906000526020600020905b815481529060010190602001808311610ea157829003601f168201915b50505091835250506003919091015460ff1615156020909101529392505050565b610ee761282e565b81610f1c600382604051808280519060200190808383602083106102a75780518252601f199092019160209182019101610288565b15610f3c5760405160e560020a62461bcd02815260040161039a90613450565b610f4583612522565b9392505050565b6000816040516020018082805190602001908083835b60208310610f815780518252601f199092019160209182019101610f62565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120836040516020018082805190602001908083835b60208310610fef5780518252601f199092019160209182019101610fd0565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201490505b92915050565b61103c61282e565b61104461288b565b6003836040518082805190602001908083835b602083106110765780518252601f199092019160209182019101611057565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810184208751909460059450889350918291908401908083835b602083106110d65780518252601f1990920191602091820191016110b7565b518151602093840361010090810a600019908101801990941693909216929092179092529290940196875260408051978890038201882061014089018252895489526001808b018054845160029382161590970290980190971604601f810184900484028501840190925281845297965088955086820194929350908301828280156111a35780601f10611178576101008083540402835291602001916111a3565b820191906000526020600020905b81548152906001019060200180831161118657829003601f168201915b5050509183525050600282810154600160a060020a031660208084019190915260038401805460408051601f6000196001851615610100020190931695909504918201849004840285018401815281855290940193909183018282801561124b5780601f106112205761010080835404028352916020019161124b565b820191906000526020600020905b81548152906001019060200180831161122e57829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156112df5780601f106112b4576101008083540402835291602001916112df565b820191906000526020600020905b8154815290600101906020018083116112c257829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156113735780601f1061134857610100808354040283529160200191611373565b820191906000526020600020905b81548152906001019060200180831161135657829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820154815250509150806020604051908101604052908160008201805480602002602001604051908101604052809291908181526020016000905b8282101561145c57600084815260209081902060408051608081018252600486029092018054600160a060020a03168352600181015493830193909352600280840154918301919091526003830154919291606084019160ff9091169081111561143e57fe5b600281111561144957fe5b81525050815260200190600101906113d8565b50505091525092945092505050915091565b816114a3600382604051808280519060200190808383602083106102a75780518252601f199092019160209182019101610288565b156114c35760405160e560020a62461bcd02815260040161039a90613450565b600280546001810180835560009290925285517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace6005909202918201805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a039384161782556020808a01517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf8601805490931694169390931790556040880151805189949293611597937f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0019201906128cc565b5060608201516003820155608082015160048201805460ff191660018360028111156115bf57fe5b02179055505050506115cf61282e565b6003846040518082805190602001908083835b602083106116015780518252601f1990920191602091820191016115e2565b518151602093840361010090810a6000199081018019909416939092169290921790925292909401968752604080519788900382018820610140890182528054895260018082018054845160029382161590970290980190971604601f810184900484028501840190925281845296508782019550919392508301828280156116cb5780601f106116a0576101008083540402835291602001916116cb565b820191906000526020600020905b8154815290600101906020018083116116ae57829003601f168201915b5050509183525050600282810154600160a060020a031660208084019190915260038401805460408051601f600019600185161561010002019093169590950491820184900484028501840181528185529094019390918301828280156117735780601f1061174857610100808354040283529160200191611773565b820191906000526020600020905b81548152906001019060200180831161175657829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156118075780601f106117dc57610100808354040283529160200191611807565b820191906000526020600020905b8154815290600101906020018083116117ea57829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815293820193929183018282801561189b5780601f106118705761010080835404028352916020019161189b565b820191906000526020600020905b81548152906001019060200180831161187e57829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820154815250509050600581602001516040518082805190602001908083835b602083106119045780518252601f1990920191602091820191016118e5565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201852060808601825233865285830189815260009287018381526001606089018181528454808301808755958752969095208951600490970201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0390971696909617865591518583015551600280860191909155925160038501805493989750949550939260ff199092169184908111156119c457fe5b02179055505050505050505050565b81611a08600382604051808280519060200190808383602083106102a75780518252601f199092019160209182019101610288565b15611a285760405160e560020a62461bcd02815260040161039a90613450565b60006003846040518082805190602001908083835b60208310611a5c5780518252601f199092019160209182019101611a3d565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092209250611a95915061294a9050565b6040805160808101825233815242602082015290810185905260608101600281525090506005826001016040518082805460018160011615610100020316600290048015611b1a5780601f10611af8576101008083540402835291820191611b1a565b820191906000526020600020905b815481529060010190602001808311611b06575b505092835250506040805160209281900383019020805460018082018084556000938452928590208651600490930201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909316929092178255938501518185015591840151600280840191909155606085015160038401805493958795949293919260ff19169184908111156119c457fe5b3360009081526004602090815260408083208054825181850281018501909352808352606094859484015b82821015611c835760008481526020908190208301805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015611c6f5780601f10611c4457610100808354040283529160200191611c6f565b820191906000526020600020905b815481529060010190602001808311611c5257829003601f168201915b505050505081526020019060010190611bd8565b50505050905060608151604051908082528060200260200182016040528015611cc657816020015b611cb361282e565b815260200190600190039081611cab5790505b50905060005b82518110156120095760038382815181101515611ce557fe5b906020019060200201516040518082805190602001908083835b60208310611d1e5780518252601f199092019160209182019101611cff565b518151602093840361010090810a6000199081018019909416939092169290921790925292909401968752604080519788900382018820610140890182528054895260018082018054845160029382161590970290980190971604601f81018490048402850184019092528184529650878201955091939250830182828015611de85780601f10611dbd57610100808354040283529160200191611de8565b820191906000526020600020905b815481529060010190602001808311611dcb57829003601f168201915b5050509183525050600282810154600160a060020a031660208084019190915260038401805460408051601f60001960018516156101000201909316959095049182018490048402850184018152818552909401939091830182828015611e905780601f10611e6557610100808354040283529160200191611e90565b820191906000526020600020905b815481529060010190602001808311611e7357829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611f245780601f10611ef957610100808354040283529160200191611f24565b820191906000526020600020905b815481529060010190602001808311611f0757829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611fb85780601f10611f8d57610100808354040283529160200191611fb8565b820191906000526020600020905b815481529060010190602001808311611f9b57829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820154815250508282815181101515611ff757fe5b60209081029091010152600101611ccc565b5091505090565b8160200151612049600382604051808280519060200190808383602083106102a75780518252601f199092019160209182019101610288565b151561206a5760405160e560020a62461bcd02815260040161039a90613430565b6040830151600160a060020a031633146120995760405160e560020a62461bcd02815260040161039a90613420565b600180548082018083556000929092528451600a9091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681019182556020808701518051889493612111937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf79091019201906128cc565b50604082015160028201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055606082015180516121609160038401916020909101906128cc565b506080820151805161217c9160048401916020909101906128cc565b5060a082015180516121989160058401916020909101906128cc565b5060c0820151816006015560e082015181600701556101008201518160080155610120820151816009015550505082600384602001516040518082805190602001908083835b602083106121fd5780518252601f1990920191602091820191016121de565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845181558484015180519194612247945060018601935001906128cc565b50604082015160028201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055606082015180516122969160038401916020909101906128cc565b50608082015180516122b29160048401916020909101906128cc565b5060a082015180516122ce9160058401916020909101906128cc565b5060c0820151816006015560e0820151816007015561010082015181600801556101208201518160090155905050600583602001516040518082805190602001908083835b602083106123325780518252601f199092019160209182019101612313565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201852060808601825233865285830188815260009287018381526060880184815283546001808201808755958752969095208951600490960201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909616959095178555915184860155516002808501919091559051600384018054939897509395509360ff19909216919084908111156123f257fe5b021790555050336000908152600460209081526040822087820151815460018101808455928552938390208151929650612434955090930192909101906128cc565b50507fadad6db1d679a6c001629a71751b484c6ce3cc054bb9ade7a55e3336504ec7e8836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b610100015160405161249a999897969594939291906134c7565b60405180910390a1505050565b6000600160a060020a03821615156124be57600080fd5b600160a060020a0382811660009081526020819052604090205461010090041615801590610f4557508260048111156124f357fe5b600160a060020a03831660009081526020819052604090205460ff16600481111561251a57fe5b149392505050565b61252a61282e565b6003826040518082805190602001908083835b6020831061255c5780518252601f19909201916020918201910161253d565b518151602093840361010090810a6000199081018019909416939092169290921790925292909401968752604080519788900382018820610140890182528054895260018082018054845160029382161590970290980190971604601f810184900484028501840190925281845296508782019550919392508301828280156126265780601f106125fb57610100808354040283529160200191612626565b820191906000526020600020905b81548152906001019060200180831161260957829003601f168201915b5050509183525050600282810154600160a060020a031660208084019190915260038401805460408051601f600019600185161561010002019093169590950491820184900484028501840181528185529094019390918301828280156126ce5780601f106126a3576101008083540402835291602001916126ce565b820191906000526020600020905b8154815290600101906020018083116126b157829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156127625780601f1061273757610100808354040283529160200191612762565b820191906000526020600020905b81548152906001019060200180831161274557829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156127f65780601f106127cb576101008083540402835291602001916127f6565b820191906000526020600020905b8154815290600101906020018083116127d957829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820154815250509050919050565b6101406040519081016040528060008152602001606081526020016000600160a060020a03168152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b60408051602081019091526060815290565b6040805160a0810190915280600081526000602082018190526060604083018190528083015260809091015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061290d57805160ff191683800117855561293a565b8280016001018555821561293a579182015b8281111561293a57825182559160200191906001019061291f565b5061294692915061296f565b5090565b6040805160808101825260008082526020820181905291810182905290606082015290565b6104f791905b808211156129465760008155600101612975565b6000610f4582356135c2565b6000610f4582356135cd565b6000610f4582356135f6565b6000610f458235613605565b6000601f820183136129ca57600080fd5b81356129dd6129d882613590565b613569565b915080825260208301602083018583830111156129f957600080fd5b612a0483828461362a565b50505092915050565b60006101408284031215612a2057600080fd5b612a2b610140613569565b90506000612a398484612c9c565b825250602082013567ffffffffffffffff811115612a5657600080fd5b612a62848285016129b9565b6020830152506040612a7684828501612989565b604083015250606082013567ffffffffffffffff811115612a9657600080fd5b612aa2848285016129b9565b606083015250608082013567ffffffffffffffff811115612ac257600080fd5b612ace848285016129b9565b60808301525060a082013567ffffffffffffffff811115612aee57600080fd5b612afa848285016129b9565b60a08301525060c0612b0e84828501612c9c565b60c08301525060e0612b2284828501612c9c565b60e083015250610100612b3784828501612c9c565b61010083015250610120612b4d84828501612c9c565b6101208301525092915050565b600060a08284031215612b6c57600080fd5b612b7660a0613569565b90506000612b848484612989565b8252506020612b9584848301612989565b602083015250604082013567ffffffffffffffff811115612bb557600080fd5b612bc1848285016129b9565b6040830152506060612bd584828501612c9c565b6060830152506080612be9848285016129a1565b60808301525092915050565b600060a08284031215612c0757600080fd5b612c1160a0613569565b90506000612c1f84846129ad565b8252506020612c3084848301612989565b602083015250604082013567ffffffffffffffff811115612c5057600080fd5b612c5c848285016129b9565b604083015250606082013567ffffffffffffffff811115612c7c57600080fd5b612c88848285016129b9565b6060830152506080612be984828501612995565b6000610f4582356104f7565b600060208284031215612cba57600080fd5b6000612cc68484612989565b949350505050565b600060208284031215612ce057600080fd5b813567ffffffffffffffff811115612cf757600080fd5b612cc6848285016129b9565b60008060408385031215612d1657600080fd5b823567ffffffffffffffff811115612d2d57600080fd5b612d39858286016129b9565b9250506020612d4a85828601612c9c565b9150509250929050565b60008060408385031215612d6757600080fd5b823567ffffffffffffffff811115612d7e57600080fd5b612d3985828601612a0d565b600080600060608486031215612d9f57600080fd5b833567ffffffffffffffff811115612db657600080fd5b612dc286828701612b5a565b935050602084013567ffffffffffffffff811115612ddf57600080fd5b612deb868287016129b9565b9250506040612dfc86828701612c9c565b9150509250925092565b600060208284031215612e1857600080fd5b813567ffffffffffffffff811115612e2f57600080fd5b612cc684828501612bf5565b612e44816135c2565b82525050565b6000612e55826135be565b80845260208401935083602082028501612e6e856135b8565b60005b84811015612ea5578383038852612e89838351613196565b9250612e94826135b8565b602098909801979150600101612e71565b50909695505050505050565b6000612ebc826135be565b80845260208401935083602082028501612ed5856135b8565b60005b84811015612ea5578383038852612ef083835161327e565b9250612efb826135b8565b602098909801979150600101612ed8565b6000612f17826135be565b808452602084019350612f29836135b8565b60005b82811015612f5957612f3f868351613353565b612f48826135b8565b608096909601959150600101612f2c565b5093949350505050565b612e44816135cd565b612e4481613614565b612e448161361f565b6000612f89826135be565b808452612f9d816020860160208601613636565b612fa681613662565b9093016020019392505050565b602181527f556e617574686f72697a65642c206e6f7420612064617461626173652075736560208201527f7200000000000000000000000000000000000000000000000000000000000000604082015260600190565b602481527f4f6e6c7920757365722063616e2061646420697473206f776e2075736572277360208201527f206c6f7400000000000000000000000000000000000000000000000000000000604082015260600190565b601781527f6c6f7420646f657320616c726561647920657869737473000000000000000000602082015260400190565b602c81527f53746573736f207574656e746520636f6e2073746573736f2072756f6c6f206760208201527f6961206573697374656e74650000000000000000000000000000000000000000604082015260600190565b601381527f6c6f7420646f6573206e6f742065786973747300000000000000000000000000602082015260400190565b601381527f5573657220646f6573206e6f7420657869737400000000000000000000000000602082015260400190565b601881527f53656e646572206973206e6f7420617574686f72697a65640000000000000000602082015260400190565b805160208084526000919084019061318d8282612f0c565b95945050505050565b80516000906101408401906131ab85826133a3565b50602083015184820360208601526131c38282612f7e565b91505060408301516131d86040860182612e3b565b50606083015184820360608601526131f08282612f7e565b9150506080830151848203608086015261320a8282612f7e565b91505060a083015184820360a08601526132248282612f7e565b91505060c083015161323960c08601826133a3565b5060e083015161324c60e08601826133a3565b506101008301516132616101008601826133a3565b506101208301516132766101208601826133a3565b509392505050565b805160009060a08401906132928582612e3b565b5060208301516132a56020860182612e3b565b50604083015184820360408601526132bd8282612f7e565b91505060608301516132d260608601826133a3565b5060808301516132766080860182612f6c565b805160009060a08401906132f98582612f75565b50602083015161330c6020860182612e3b565b50604083015184820360408601526133248282612f7e565b9150506060830151848203606086015261333e8282612f7e565b91505060808301516132766080860182612f63565b805160808301906133648482612e3b565b50602082015161337760208501826133a3565b50604082015161338a60408501826133a3565b50606082015161339d6060850182612f6c565b50505050565b612e44816104f7565b6020810161102e8284612e3b565b60208082528101610f458184612e4a565b60208082528101610f458184612eb1565b606080825281016133ed8186612f7e565b905081810360208301526134018185612f7e565b9050612cc66040830184612f75565b6020808252810161102e81612fb3565b6020808252810161102e81613009565b6020808252810161102e8161305f565b6020808252810161102e8161308f565b6020808252810161102e816130e5565b6020808252810161102e81613115565b6020808252810161102e81613145565b60208082528101610f458184613196565b604080825281016134a28185613196565b90508181036020830152612cc68184613175565b60208082528101610f4581846132e5565b61012081016134d6828c6133a3565b81810360208301526134e8818b612f7e565b90506134f7604083018a612e3b565b81810360608301526135098189612f7e565b9050818103608083015261351d8188612f7e565b905081810360a08301526135318187612f7e565b905061354060c08301866133a3565b61354d60e08301856133a3565b61355b6101008301846133a3565b9a9950505050505050505050565b60405181810167ffffffffffffffff8111828210171561358857600080fd5b604052919050565b600067ffffffffffffffff8211156135a757600080fd5b506020601f91909101601f19160190565b60200190565b5190565b600061102e826135ea565b151590565b60006003821061294657fe5b60006005821061294657fe5b600160a060020a031690565b60006003821061294657600080fd5b60006005821061294657600080fd5b600061102e826135d2565b600061102e826135de565b82818337506000910152565b60005b83811015613651578181015183820152602001613639565b8381111561339d5750506000910152565b601f01601f19169056fea265627a7a72305820ecc40bc742e45d5e90b57b3ee80f78ea69c22f13b1f8800fc5a2caa824a5586f6c6578706572696d656e74616cf50037",
  "sourceMap": "187:1869:2:-;;;248:33:4;;:::i;:::-;-1:-1:-1;284:221:4;;;;;;;;322:21;284:221;;;362:42;284:221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:33;;:::i;:::-;-1:-1:-1;551:221:4;;;;;;;;589:23;551:221;;;631:42;551:221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:4;551:221;;;;;;790:12;;;;-1:-1:-1;;;;;784:19:4;-1:-1:-1;784:19:4;;;;;;;;;;:30;;;;551:221;;790:12;;784:19;;-1:-1:-1;;784:30:4;;;;;;;;;;;;;;;;;-1:-1:-1;784:30:4;;;;;;;-1:-1:-1;;;;;784:30:4;;;;;-1:-1:-1;;;;;;784:30:4;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;784:30:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;784:30:4;;;;;;;;;;;;;;;-1:-1:-1;;784:30:4;;;;;;830:12;;;;;-1:-1:-1;;;;;824:19:4;784:30;824:19;;;;;;;;;;:30;;;;846:8;;824:19;;:30;784;824;;;;;;;;;;;;;-1:-1:-1;824:30:4;;;;;;;-1:-1:-1;;;;;824:30:4;;;;;-1:-1:-1;;;;;;824:30:4;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;824:30:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;824:30:4;;;;;;;;;;;;-1:-1:-1;;824:30:4;;;;;;;;;;-1:-1:-1;187:1869:2;;-1:-1:-1;187:1869:2;;;;;;;;;;;;-1:-1:-1;187:1869:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;187:1869:2;;;-1:-1:-1;187:1869:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "187:1869:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1505:234;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1505:234:2;;;;;;;;;;;;;;;;;;;;;;;;;;867:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;867:115:2;;;;;;;;;;;;420:220;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;420:220:2;;;;;;;;;;;1926:123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1926:123:2;;;;;;;;;;;;650:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;650:211:2;;;;;;;;;1184:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1184:110:2;;;;;;;;;;;;988:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;988:91:2;;;;240:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;240:170:2;;;;;;;;;1085:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1085:89:2;;;;;;;;;;;;1010:239:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1010:239:4;;;;;;;;;1745:175:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1745:175:2;;;;;;;;;1304:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1304:195:2;;;;;;;;;;;;;;;;;1505:234;1635:16;;:::i;:::-;1653:23;;:::i;:::-;1606:10;2440:38:0;2455:3;2459;2455:8;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;-1:-1;;263:2;259:12;;;254:3;250:22;;;246:30;;340:21;;;311:9;;295:26;;;;377:20;;;;365:33;;;2455:8:0;;;;;;;;;;;;;;;;;;274:1:-1;2455:18:0;;;2440:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:18;;-1:-1:-1;2440:38:0;;-1:-1:-1;;2440:38:0;;2455:18;2440:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:38::i;:::-;2439:39;2431:70;;;;-1:-1:-1;;;;;2431:70:0;;;;;;;;;;;;;;;;;1699:33:2;1721:10;1699:21;:33::i;:::-;1692:40;;;;1505:234;;;;:::o;867:115::-;918:26;963:12;956:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;956:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;956:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;956:19:2;;;-1:-1:-1;;956:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:115;;:::o;420:220::-;2348:10:4;2342:5;:17;;;;;;;;;;:25;;;;;2334:57;;;;;;-1:-1:-1;;;;;2334:57:4;;;;;;;;;578:55:2;594:12;608:10;620:12;578:15;:55::i;:::-;420:220;;;:::o;1926:123::-;1982:24;;:::i;:::-;2348:10:4;2342:5;:17;;;;;;;;;;:25;;;;;2334:57;;;;;;-1:-1:-1;;;;;2334:57:4;;;;;;;;;2031:10:2;2025:5;:17;;;;;;;;;;;;2018:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2018:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2018:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2018:24:2;;;-1:-1:-1;;2018:24:2;;;;;;;;;;;;;;;;-1:-1:-1;;2018:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2018:24:2;;;-1:-1:-1;;2018:24:2;;;;;;;;;;;;;;;;-1:-1:-1;1926:123:2;:::o;650:211::-;2348:10:4;2342:5;:17;;;;;;;;;;:25;;;;;2334:57;;;;;;-1:-1:-1;;;;;2334:57:4;;;;;;;;;773:23:2;1769:10:4;:24;;1761:33;;;;;;1814:10;1841:1;1808:17;;;;;;;;;;:21;;;;-1:-1:-1;;;;;1808:21:4;:35;;;;:69;;;1873:4;1847:30;;;;;;;;1853:10;1847:5;:17;;;;;;;;;;:22;;;:30;;;;;;;;;1808:69;1800:115;;;;;;-1:-1:-1;;;;;1800:115:4;;;;;;;;;812:42:2;829:10;841:12;812:16;:42::i;1184:110::-;2348:10:4;2342:5;:17;;;;;;;;;;:25;;;1237:18:2;;2342:25:4;;2334:57;;;;;;-1:-1:-1;;;;;2334:57:4;;;;;;;;;1274:13:2;:11;:13::i;:::-;1267:20;;1184:110;:::o;988:91::-;1031:18;1068:4;1061:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1061:11:2;;;-1:-1:-1;;1061:11:2;;;;;-1:-1:-1;;;;;1061:11:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;1061:11:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1061:11:2;;;-1:-1:-1;;1061:11:2;;;;;;;;;;;;;;;;-1:-1:-1;;1061:11:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1061:11:2;;;-1:-1:-1;;1061:11:2;;;;;;;;;;;;;;;;-1:-1:-1;;1061:11:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;240:170;2348:10:4;2342:5;:17;;;;;;;;;;:25;;;;;2334:57;;;;;;-1:-1:-1;;;;;2334:57:4;;;;;;;;;2103:21;2083:10;2077:5;:17;;;;;;;;;;:22;;;:47;;;;;;;;;:108;;;-1:-1:-1;2142:10:4;2162:23;2136:17;;;;;;;;;;:22;;;:49;;;;;;;;;2077:108;2060:175;;;;;;-1:-1:-1;;;;;2060:175:4;;;;;;;;;376:27:2;384:4;390:12;376:7;:27::i;:::-;240:170;;:::o;1085:89::-;1157:10;1085:89;:::o;1010:239:4:-;1081:24;1085:4;:9;;;1096:4;:8;;;1081:3;:24::i;:::-;1080:25;1072:82;;;;-1:-1:-1;;;;;1072:82:4;;;;;;;;;1170:8;;;;;-1:-1:-1;;;;;1164:15:4;:5;:15;;;;;;;;;;:22;;;;1182:4;;1164:15;:22;:15;;-1:-1:-1;;1164:22:4;;;;;;;;;;;;;;;-1:-1:-1;1164:22:4;;;;;;;-1:-1:-1;;;;;1164:22:4;;;;;-1:-1:-1;;1164:22:4;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1164:22:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1164:22:4;;;;;;;;;;;;-1:-1:-1;;1164:22:4;;;;;;;;;;1209:9;;;;;1220:10;;;;1232:9;;1201:41;;;;;;1209:9;1220:10;1201:41;;;;;;;;;;1010:239;:::o;1745:175:2:-;1856:24;;:::i;:::-;-1:-1:-1;;;;;2504:10:4;;:5;:10;;;;;;;;;;:18;;;1834:3:2;;2504:18:4;;2496:50;;;;;;-1:-1:-1;;;;;2496:50:4;;;;;;;;;-1:-1:-1;;;;;1903:10:2;;:5;:10;;;;;;;;;;;;1896:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1896:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1896:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:17:2;;;-1:-1:-1;;1896:17:2;;;;;;;;;;;;;;;;-1:-1:-1;;1896:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:17:2;;;-1:-1:-1;;1896:17:2;;;;;;;;;;;;;;;;1745:175;-1:-1:-1;;;1745:175:2:o;1304:195::-;1427:16;;:::i;:::-;1398:10;2440:38:0;2455:3;2459;2455:8;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;2440:38:0;2439:39;2431:70;;;;-1:-1:-1;;;;;2431:70:0;;;;;;;;;1466:26:2;1481:10;1466:14;:26::i;:::-;1459:33;1304:195;-1:-1:-1;;;1304:195:2:o;2678:221:0:-;2783:4;2887:1;2869:21;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2869:21:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2869:21:0;;;2859:32;;;;;;2839:1;2821:21;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2821:21:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2821:21:0;;;2811:32;;;;;;:80;2803:89;;2678:221;;;;;:::o;1023:216::-;1127:16;;:::i;:::-;1145:23;;:::i;:::-;1192:3;1196:10;1192:15;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1192:15:0;;;;;-1:-1:-1;1192:15:0;;;;;;;;;;1209:22;;1192:15;;1209:10;;-1:-1:-1;1209:22:0;;-1:-1:-1;1192:15:0;;;1209:22;;;;;1192:15;1209:22;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;;;-1:-1;;246:30;;;311:9;;295:26;;;340:21;;;;377:20;;;;365:33;;;1209:22:0;;;;;;;;;;;;;;;;;;1184:48;;;;;;;;;274:1:-1;1184:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:22;;-1:-1:-1;1184:48:0;;-1:-1:-1;1184:48:0;;;;;;-1:-1:-1;1184:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1184:48:0;;;-1:-1:-1;;1184:48:0;;;;;-1:-1:-1;;;;;1184:48:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;1184:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1184:48:0;;;-1:-1:-1;;1184:48:0;;;;;;;;;;;;;;;;-1:-1:-1;;1184:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1184:48:0;;;-1:-1:-1;;1184:48:0;;;;;;;;;;;;;;;;-1:-1:-1;;1184:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1184:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1184:48:0;;-1:-1:-1;1184:48:0;;-1:-1:-1;1184:48:0;-1:-1:-1;;;1023:216:0;;;:::o;174:547:5:-;399:10;2440:38:0;2455:3;2459;2455:8;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;2440:38:0;2439:39;2431:70;;;;-1:-1:-1;;;;;2431:70:0;;;;;;;;;421:12:5;27:10:-1;;39:1;23:18;;45:23;;;-1:-1;421:31:5;;;;;;;;;;;;;;;;-1:-1:-1;;421:31:5;;;-1:-1:-1;;;;;421:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;421:31:5;;;;;;;;;;;;;;;;;-1:-1:-1;;421:31:5;;;;;;;;;;;;;;;;;;;462:21;;:::i;:::-;486:3;490:10;486:15;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;;;-1:-1;;246:30;;;311:9;;295:26;;;340:21;;;;377:20;;;;365:33;;;486:15:5;;;;;;;;;;;;;;;;;;462:39;;;;;;;;;274:1:-1;462:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;486:15;-1:-1:-1;462:39:5;;;;-1:-1:-1;462:39:5;;;-1:-1:-1;462:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;462:39:5;;;-1:-1:-1;;462:39:5;;;;;-1:-1:-1;;;;;462:39:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;462:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;462:39:5;;;-1:-1:-1;;462:39:5;;;;;;;;;;;;;;;;-1:-1:-1;;462:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;462:39:5;;;-1:-1:-1;;462:39:5;;;;;;;;;;;;;;;;-1:-1:-1;;462:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:10;522:4;:14;;;511:26;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;511:26:5;;;;;-1:-1:-1;511:26:5;;;;;;;;;;;556:154;;;;;593:10;556:154;;;;;;;;-1:-1:-1;556:154:5;;;;;;274:1:-1;556:154:5;;;;;;27:10:-1;;23:18;;;45:23;;;511:200:5;;;;;;;;;;;;;;;;-1:-1:-1;;511:200:5;-1:-1:-1;;;;;511:200:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:18:-1;;511:26:5;-1:-1:-1;511:200:5;;-1:-1:-1;511:200:5;;-1:-1:-1;;511:200:5;;;;;;;;;;;;;;;;;;;;;2511:1:0;174:547:5;;;;:::o;170:541:6:-;263:10;2440:38:0;2455:3;2459;2455:8;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;2440:38:0;2439:39;2431:70;;;;-1:-1:-1;;;;;2431:70:0;;;;;;;;;281:22:6;306:3;310:10;306:15;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;306:15:6;;;;;-1:-1:-1;306:15:6;;;;;;;;;;;-1:-1:-1;327:39:6;;-1:-1:-1;327:39:6;;-1:-1:-1;327:39:6:i;:::-;369:208;;;;;;;;402:10;369:208;;428:15;369:208;;;;;;;;;;;;;494:19;369:208;;;327:250;;648:10;659:4;:14;;648:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;648:26:6;;;-1:-1:-1;;648:26:6;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;;-1:-1;648:60:6;;;;;;;;;;;;;;;;-1:-1:-1;;648:60:6;-1:-1:-1;;;;;648:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:18:-1;;648:60:6;;;;;;;-1:-1:-1;;648:60:6;;;;;;;;;;698:318:0;812:10;797:26;;;;:14;:26;;;;;;;;774:49;;;;;;;;;;;;;;;;;744:18;;;;774:49;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;774:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:24;876:4;:11;860:28;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;833:55:0;-1:-1:-1;903:9:0;898:90;922:4;:11;918:1;:15;898:90;;;965:3;969:4;974:1;969:7;;;;;;;;;;;;;;;;;;965:12;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;;;-1:-1;;246:30;;;311:9;;295:26;;;340:21;;;;377:20;;;;365:33;;;965:12:0;;;;;;;;;;;;;;;;;;954:23;;;;;;;;;274:1:-1;954:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:12;-1:-1:-1;954:23:0;;;;-1:-1:-1;954:23:0;;;-1:-1:-1;954:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;954:23:0;;;-1:-1:-1;;954:23:0;;;;;-1:-1:-1;;;;;954:23:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;954:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;954:23:0;;;-1:-1:-1;;954:23:0;;;;;;;;;;;;;;;;-1:-1:-1;;954:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;954:23:0;;;-1:-1:-1;;954:23:0;;;;;;;;;;;;;;;;-1:-1:-1;;954:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;960:1;954:8;;;;;;;;;;;;;;;;;;:23;935:3;;898:90;;;-1:-1:-1;1004:5:0;-1:-1:-1;;698:318:0;:::o;1415:941::-;1516:4;:14;;;2584:38;2599:3;2603;2599:8;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;2584:38:0;2576:73;;;;;;-1:-1:-1;;;;;2576:73:0;;;;;;;;;1567:18;;;;-1:-1:-1;;;;;1567:32:0;1589:10;1567:32;1546:115;;;;-1:-1:-1;;;;;1546:115:0;;;;;;;;;1672:4;27:10:-1;;23:18;;;45:23;;;-1:-1;1672:15:0;;;;;;;;;;;;;;;;;;;;;;;1682:4;;1672:15;;;;;;;;;;;:::i;:::-;-1:-1:-1;1672:15:0;;;;;;;;;-1:-1:-1;;1672:15:0;-1:-1:-1;;;;;1672:15:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1672:15:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1672:15:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1719:4;1697:3;1701:4;:14;;;1697:19;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1697:19:0;;;;;-1:-1:-1;1697:19:0;;;;;;;;;;;:26;;;;;;;;;;:19;;:26;;-1:-1:-1;274:1;1697:26:0;;;-1:-1:-1;1697:26:0;;;:::i;:::-;-1:-1:-1;1697:26:0;;;;;;;;;-1:-1:-1;;1697:26:0;-1:-1:-1;;;;;1697:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1697:26:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1697:26:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:10;1826:4;:14;;;1815:26;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1815:26:0;;;;;-1:-1:-1;1815:26:0;;;;;;;;;;;1860:156;;;;;1897:10;1860:156;;;;;;;;-1:-1:-1;1860:156:0;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;;1815:202:0;;;;;;;;;;;;;;;;-1:-1:-1;;1815:202:0;-1:-1:-1;;;;;1815:202:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:18:-1;;1815:26:0;-1:-1:-1;1815:202:0;;-1:-1:-1;1815:202:0;-1:-1:-1;;1815:202:0;;;;39:1:-1;1815:202:0;;;;;;;;;;;;;-1:-1:-1;;2043:10:0;2028:26;;;;:14;:26;;;;;;;2060:14;;;;27:10:-1;;39:1;23:18;;45:23;;;2028:47:0;;;;;;;;;23:18:-1;;-1:-1;2028:47:0;;-1:-1:-1;2028:47:0;;;;;;;;;:::i;:::-;;;2090:259;2110:4;:11;;;2135:4;:14;;;2163:4;:18;;;2195:4;:11;;;2220:4;:12;;;2246:4;:12;;;2273:4;:15;;;2303:4;:13;;;2330:4;:9;;;2090:259;;;;;;;;;;;;;;;;;;;;;;;1415:941;;;:::o;1446:269:4:-;1563:4;-1:-1:-1;;;;;1591:21:4;;;;1583:30;;;;;;-1:-1:-1;;;;;1631:14:4;;;1661:1;1631:14;;;;;;;;;;:18;;;;;:32;;;;:75;;;1702:4;1679:27;;;;;;;;-1:-1:-1;;;;;1679:14:4;;:5;:14;;;;;;;;;;:19;;;:27;;;;;;;;;1623:84;1446:269;-1:-1:-1;;;1446:269:4:o;1249:160:0:-;1346:16;;:::i;:::-;1386:3;1390:10;1386:15;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;;;-1:-1;;246:30;;;311:9;;295:26;;;340:21;;;;377:20;;;;365:33;;;1386:15:0;;;;;;;;;;;;;;;;;;1378:24;;;;;;;;;274:1:-1;1378:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1386:15;-1:-1:-1;1378:24:0;;;;-1:-1:-1;1378:24:0;;;-1:-1:-1;1378:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1378:24:0;;;-1:-1:-1;;1378:24:0;;;;;-1:-1:-1;;;;;1378:24:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;1378:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1378:24:0;;;-1:-1:-1;;1378:24:0;;;;;;;;;;;;;;;;-1:-1:-1;;1378:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1378:24:0;;;-1:-1:-1;;1378:24:0;;;;;;;;;;;;;;;;-1:-1:-1;;1378:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:160;;;:::o;187:1869:2:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;187:1869:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;187:1869:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;187:1869:2;;;-1:-1:-1;187:1869:2;:::i;:::-;;;:::o;:::-;;;;;;;;;-1:-1:-1;187:1869:2;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:118:-1;;72:46;110:6;97:20;72:46;;130:112;;194:43;229:6;216:20;194:43;;249:156;;335:65;392:6;379:20;335:65;;412:142;;491:58;541:6;528:20;491:58;;562:434;;653:4;641:17;;637:27;-1:-1;627:2;;678:1;675;668:12;627:2;715:6;702:20;737:61;752:45;790:6;752:45;;;737:61;;;728:70;;818:6;811:5;804:21;854:4;846:6;842:17;887:4;880:5;876:16;922:3;913:6;908:3;904:16;901:25;898:2;;;939:1;936;929:12;898:2;949:41;983:6;978:3;973;949:41;;;620:376;;;;;;;;1478:2030;;1587:5;1575:9;1570:3;1566:19;1562:31;1559:2;;;1606:1;1603;1596:12;1559:2;1624:21;1639:5;1624:21;;;1615:30;-1:-1;1697:1;1728:49;1773:3;1753:9;1728:49;;;1704:74;;-1:-1;1872:2;1857:18;;1844:32;1896:18;1885:30;;1882:2;;;1928:1;1925;1918:12;1882:2;1963:55;2014:3;2005:6;1994:9;1990:22;1963:55;;;1956:4;1949:5;1945:16;1938:81;1799:231;2089:2;2122:49;2167:3;2158:6;2147:9;2143:22;2122:49;;;2115:4;2108:5;2104:16;2097:75;2040:143;2263:2;2252:9;2248:18;2235:32;2287:18;2279:6;2276:30;2273:2;;;2319:1;2316;2309:12;2273:2;2354:55;2405:3;2396:6;2385:9;2381:22;2354:55;;;2347:4;2340:5;2336:16;2329:81;2193:228;2502:3;2491:9;2487:19;2474:33;2527:18;2519:6;2516:30;2513:2;;;2559:1;2556;2549:12;2513:2;2594:55;2645:3;2636:6;2625:9;2621:22;2594:55;;;2587:4;2580:5;2576:16;2569:81;2431:230;2742:3;2731:9;2727:19;2714:33;2767:18;2759:6;2756:30;2753:2;;;2799:1;2796;2789:12;2753:2;2834:55;2885:3;2876:6;2865:9;2861:22;2834:55;;;2827:4;2820:5;2816:16;2809:81;2671:230;2957:3;2991:49;3036:3;3027:6;3016:9;3012:22;2991:49;;;2984:4;2977:5;2973:16;2966:75;2911:141;3106:3;3140:49;3185:3;3176:6;3165:9;3161:22;3140:49;;;3133:4;3126:5;3122:16;3115:75;3062:139;3251:3;3286:49;3331:3;3322:6;3311:9;3307:22;3286:49;;;3278:5;3271;3267:17;3260:76;3211:136;3402:3;3437:49;3482:3;3473:6;3462:9;3458:22;3437:49;;;3429:5;3422;3418:17;3411:76;3357:141;1553:1955;;;;;3546:1028;;3663:4;3651:9;3646:3;3642:19;3638:30;3635:2;;;3681:1;3678;3671:12;3635:2;3699:20;3714:4;3699:20;;;3690:29;-1:-1;3770:1;3801:49;3846:3;3826:9;3801:49;;;3777:74;;-1:-1;3916:2;3949:49;3994:3;3970:22;;;3949:49;;;3942:4;3935:5;3931:16;3924:75;3872:138;4096:2;4085:9;4081:18;4068:32;4120:18;4112:6;4109:30;4106:2;;;4152:1;4149;4142:12;4106:2;4187:55;4238:3;4229:6;4218:9;4214:22;4187:55;;;4180:4;4173:5;4169:16;4162:81;4020:234;4305:2;4338:49;4383:3;4374:6;4363:9;4359:22;4338:49;;;4331:4;4324:5;4320:16;4313:75;4264:135;4450:3;4484:68;4548:3;4539:6;4528:9;4524:22;4484:68;;;4477:4;4470:5;4466:16;4459:94;4409:155;3629:945;;;;;4612:1098;;4729:4;4717:9;4712:3;4708:19;4704:30;4701:2;;;4747:1;4744;4737:12;4701:2;4765:20;4780:4;4765:20;;;4756:29;-1:-1;4835:1;4866:61;4923:3;4903:9;4866:61;;;4842:86;;-1:-1;4988:2;5021:49;5066:3;5042:22;;;5021:49;;;5014:4;5007:5;5003:16;4996:75;4949:133;5160:2;5149:9;5145:18;5132:32;5184:18;5176:6;5173:30;5170:2;;;5216:1;5213;5206:12;5170:2;5251:55;5302:3;5293:6;5282:9;5278:22;5251:55;;;5244:4;5237:5;5233:16;5226:81;5092:226;5397:2;5386:9;5382:18;5369:32;5421:18;5413:6;5410:30;5407:2;;;5453:1;5450;5443:12;5407:2;5488:55;5539:3;5530:6;5519:9;5515:22;5488:55;;;5481:4;5474:5;5470:16;5463:81;5328:227;5608:3;5642:46;5684:3;5675:6;5664:9;5660:22;5642:46;;5717:118;;5784:46;5822:6;5809:20;5784:46;;5842:241;;5946:2;5934:9;5925:7;5921:23;5917:32;5914:2;;;5962:1;5959;5952:12;5914:2;5997:1;6014:53;6059:7;6039:9;6014:53;;;6004:63;5908:175;-1:-1;;;;5908:175;6090:347;;6204:2;6192:9;6183:7;6179:23;6175:32;6172:2;;;6220:1;6217;6210:12;6172:2;6255:31;;6306:18;6295:30;;6292:2;;;6338:1;6335;6328:12;6292:2;6358:63;6413:7;6404:6;6393:9;6389:22;6358:63;;6444:472;;;6575:2;6563:9;6554:7;6550:23;6546:32;6543:2;;;6591:1;6588;6581:12;6543:2;6626:31;;6677:18;6666:30;;6663:2;;;6709:1;6706;6699:12;6663:2;6729:63;6784:7;6775:6;6764:9;6760:22;6729:63;;;6719:73;;6605:193;6829:2;6847:53;6892:7;6883:6;6872:9;6868:22;6847:53;;;6837:63;;6808:98;6537:379;;;;;;6923:492;;;7064:2;7052:9;7043:7;7039:23;7035:32;7032:2;;;7080:1;7077;7070:12;7032:2;7115:31;;7166:18;7155:30;;7152:2;;;7198:1;7195;7188:12;7152:2;7218:73;7283:7;7274:6;7263:9;7259:22;7218:73;;7422:739;;;;7598:2;7586:9;7577:7;7573:23;7569:32;7566:2;;;7614:1;7611;7604:12;7566:2;7649:31;;7700:18;7689:30;;7686:2;;;7732:1;7729;7722:12;7686:2;7752:81;7825:7;7816:6;7805:9;7801:22;7752:81;;;7742:91;;7628:211;7898:2;7887:9;7883:18;7870:32;7922:18;7914:6;7911:30;7908:2;;;7954:1;7951;7944:12;7908:2;7974:63;8029:7;8020:6;8009:9;8005:22;7974:63;;;7964:73;;7849:194;8074:2;8092:53;8137:7;8128:6;8117:9;8113:22;8092:53;;;8082:63;;8053:98;7560:601;;;;;;8168:383;;8300:2;8288:9;8279:7;8275:23;8271:32;8268:2;;;8316:1;8313;8306:12;8268:2;8351:31;;8402:18;8391:30;;8388:2;;;8434:1;8431;8424:12;8388:2;8454:81;8527:7;8518:6;8507:9;8503:22;8454:81;;8558:110;8631:31;8656:5;8631:31;;;8626:3;8619:44;8613:55;;;8724:843;;8891:70;8955:5;8891:70;;;8979:6;8974:3;8967:19;9003:4;8998:3;8994:14;8987:21;;9051:3;9093:4;9085:6;9081:17;9076:3;9072:27;9119:72;9185:5;9119:72;;;9212:1;9197:331;9222:6;9219:1;9216:13;9197:331;;;9284:9;9278:4;9274:20;9269:3;9262:33;9310:90;9395:4;9386:6;9380:13;9310:90;;;9302:98;;9417:76;9486:6;9417:76;;;9516:4;9507:14;;;;;9407:86;-1:-1;9244:1;9237:9;9197:331;;;-1:-1;9541:4;;8870:697;-1:-1;;;;;;8870:697;9640:899;;9823:78;9895:5;9823:78;;;9919:6;9914:3;9907:19;9943:4;9938:3;9934:14;9927:21;;9991:3;10033:4;10025:6;10021:17;10016:3;10012:27;10059:80;10133:5;10059:80;;;10160:1;10145:355;10170:6;10167:1;10164:13;10145:355;;;10232:9;10226:4;10222:20;10217:3;10210:33;10258:106;10359:4;10350:6;10344:13;10258:106;;;10250:114;;10381:84;10458:6;10381:84;;;10488:4;10479:14;;;;;10371:94;-1:-1;10192:1;10185:9;10145:355;;10612:746;;10791:74;10859:5;10791:74;;;10883:6;10878:3;10871:19;10907:4;10902:3;10898:14;10891:21;;10952:76;11022:5;10952:76;;;11049:1;11034:302;11059:6;11056:1;11053:13;11034:302;;;11099:105;11200:3;11191:6;11185:13;11099:105;;;11221:80;11294:6;11221:80;;;11324:4;11315:14;;;;;11211:90;-1:-1;11081:1;11074:9;11034:302;;;-1:-1;11349:3;;10770:588;-1:-1;;;;10770:588;11366:101;11433:28;11455:5;11433:28;;11474:132;11555:45;11594:5;11555:45;;11770:136;11853:47;11894:5;11853:47;;11913:292;;12011:35;12040:5;12011:35;;;12063:6;12058:3;12051:19;12075:63;12131:6;12124:4;12119:3;12115:14;12108:4;12101:5;12097:16;12075:63;;;12170:29;12192:6;12170:29;;;12150:50;;;12163:4;12150:50;;11991:214;-1:-1;;;11991:214;12213:397;12368:2;12356:15;;12405:66;12400:2;12391:12;;12384:88;12506:66;12501:2;12492:12;;12485:88;12601:2;12592:12;;12349:261;12619:397;12774:2;12762:15;;12811:66;12806:2;12797:12;;12790:88;12912:66;12907:2;12898:12;;12891:88;13007:2;12998:12;;12755:261;13025:296;13180:2;13168:15;;13217:66;13212:2;13203:12;;13196:88;13312:2;13303:12;;13161:160;13330:397;13485:2;13473:15;;13522:66;13517:2;13508:12;;13501:88;13623:66;13618:2;13609:12;;13602:88;13718:2;13709:12;;13466:261;13736:296;13891:2;13879:15;;13928:66;13923:2;13914:12;;13907:88;14023:2;14014:12;;13872:160;14041:296;14196:2;14184:15;;14233:66;14228:2;14219:12;;14212:88;14328:2;14319:12;;14177:160;14346:296;14501:2;14489:15;;14538:66;14533:2;14524:12;;14517:88;14633:2;14624:12;;14482:160;14707:492;14929:22;;14852:4;14963:37;;;14707:492;;14843:14;;;;15015:146;14843:14;14929:22;15015:146;;;15007:154;14825:374;-1:-1;;;;;14825:374;15249:2125;15452:22;;15249:2125;;15380:5;15371:15;;;15486:61;15375:3;15452:22;15486:61;;;15401:158;15640:4;15633:5;15629:16;15623:23;15691:3;15685:4;15681:14;15674:4;15669:3;15665:14;15658:38;15711:68;15774:4;15761:11;15711:68;;;15703:76;;15569:222;15876:4;15869:5;15865:16;15859:23;15894:62;15950:4;15945:3;15941:14;15928:11;15894:62;;;15801:167;16046:4;16039:5;16035:16;16029:23;16097:3;16091:4;16087:14;16080:4;16075:3;16071:14;16064:38;16117:68;16180:4;16167:11;16117:68;;;16109:76;;15978:219;16276:4;16269:5;16265:16;16259:23;16327:3;16321:4;16317:14;16310:4;16305:3;16301:14;16294:38;16347:68;16410:4;16397:11;16347:68;;;16339:76;;16207:220;16506:4;16499:5;16495:16;16489:23;16557:3;16551:4;16547:14;16540:4;16535:3;16531:14;16524:38;16577:68;16640:4;16627:11;16577:68;;;16569:76;;16437:220;16739:4;16732:5;16728:16;16722:23;16757:62;16813:4;16808:3;16804:14;16791:11;16757:62;;;16667:164;16911:4;16904:5;16900:16;16894:23;16929:62;16985:4;16980:3;16976:14;16963:11;16929:62;;;16841:162;17079:5;17072;17068:17;17062:24;17098:63;17154:5;17149:3;17145:15;17132:11;17098:63;;;17013:160;17254:5;17247;17243:17;17237:24;17273:63;17329:5;17324:3;17320:15;17307:11;17273:63;;;-1:-1;17365:4;15353:2021;-1:-1;;;15353:2021;19611:1108;19824:22;;19611:1108;;19754:4;19745:14;;;19858:61;19749:3;19824:22;19858:61;;;19774:157;20011:4;20004:5;20000:16;19994:23;20029:62;20085:4;20080:3;20076:14;20063:11;20029:62;;;19941:162;20187:4;20180:5;20176:16;20170:23;20238:3;20232:4;20228:14;20221:4;20216:3;20212:14;20205:38;20258:68;20321:4;20308:11;20258:68;;;20250:76;;20113:225;20415:4;20408:5;20404:16;20398:23;20433:62;20489:4;20484:3;20480:14;20467:11;20433:62;;;20348:159;20584:4;20577:5;20573:16;20567:23;20602:79;20675:4;20670:3;20666:14;20653:11;20602:79;;20785:1146;21001:22;;20785:1146;;20932:4;20923:14;;;21035:71;20927:3;21001:22;21035:71;;;20952:166;21193:4;21186:5;21182:16;21176:23;21211:62;21267:4;21262:3;21258:14;21245:11;21211:62;;;21128:157;21361:4;21354:5;21350:16;21344:23;21412:3;21406:4;21402:14;21395:4;21390:3;21386:14;21379:38;21432:68;21495:4;21482:11;21432:68;;;21424:76;;21295:217;21589:4;21582:5;21578:16;21572:23;21640:3;21634:4;21630:14;21623:4;21618:3;21614:14;21607:38;21660:68;21723:4;21710:11;21660:68;;;21652:76;;21522:218;21819:4;21812:5;21808:16;21802:23;21837:56;21887:4;21882:3;21878:14;21865:11;21837:56;;21997:844;22200:22;;22132:4;22123:14;;;22234:61;22127:3;22200:22;22234:61;;;22152:155;22383:4;22376:5;22372:16;22366:23;22401:62;22457:4;22452:3;22448:14;22435:11;22401:62;;;22317:158;22556:4;22549:5;22545:16;22539:23;22574:62;22630:4;22625:3;22621:14;22608:11;22574:62;;;22485:163;22726:4;22719:5;22715:16;22709:23;22744:70;22808:4;22803:3;22799:14;22786:11;22744:70;;;22658:168;22105:736;;;;22848:110;22921:31;22946:5;22921:31;;22965:193;23073:2;23058:18;;23087:61;23062:9;23121:6;23087:61;;23165:405;23355:2;23369:47;;;23340:18;;23430:130;23340:18;23546:6;23430:130;;23577:437;23783:2;23797:47;;;23768:18;;23858:146;23768:18;23990:6;23858:146;;24021:575;24227:2;24241:47;;;24212:18;;24302:64;24212:18;24352:6;24302:64;;;24294:72;;24414:9;24408:4;24404:20;24399:2;24388:9;24384:18;24377:48;24439:64;24498:4;24489:6;24439:64;;;24431:72;;24514;24582:2;24571:9;24567:18;24558:6;24514:72;;24603:387;24784:2;24798:47;;;24769:18;;24859:121;24769:18;24859:121;;24997:387;25178:2;25192:47;;;25163:18;;25253:121;25163:18;25253:121;;25391:387;25572:2;25586:47;;;25557:18;;25647:121;25557:18;25647:121;;25785:387;25966:2;25980:47;;;25951:18;;26041:121;25951:18;26041:121;;26179:387;26360:2;26374:47;;;26345:18;;26435:121;26345:18;26435:121;;26573:387;26754:2;26768:47;;;26739:18;;26829:121;26739:18;26829:121;;26967:387;27148:2;27162:47;;;27133:18;;27223:121;27133:18;27223:121;;27361:321;27509:2;27523:47;;;27494:18;;27584:88;27494:18;27658:6;27584:88;;27689:578;27919:2;27933:47;;;27904:18;;27994:88;27904:18;28068:6;27994:88;;;27986:96;;28130:9;28124:4;28120:20;28115:2;28104:9;28100:18;28093:48;28155:102;28252:4;28243:6;28155:102;;28274:353;28438:2;28452:47;;;28423:18;;28513:104;28423:18;28603:6;28513:104;;28634:1327;29030:3;29015:19;;29045:61;29019:9;29079:6;29045:61;;;29154:9;29148:4;29144:20;29139:2;29128:9;29124:18;29117:48;29179:64;29238:4;29229:6;29179:64;;;29171:72;;29254:62;29312:2;29301:9;29297:18;29288:6;29254:62;;;29364:9;29358:4;29354:20;29349:2;29338:9;29334:18;29327:48;29389:64;29448:4;29439:6;29389:64;;;29381:72;;29502:9;29496:4;29492:20;29486:3;29475:9;29471:19;29464:49;29527:64;29586:4;29577:6;29527:64;;;29519:72;;29640:9;29634:4;29630:20;29624:3;29613:9;29609:19;29602:49;29665:64;29724:4;29715:6;29665:64;;;29657:72;;29740:63;29798:3;29787:9;29783:19;29774:6;29740:63;;;29814;29872:3;29861:9;29857:19;29848:6;29814:63;;;29888;29946:3;29935:9;29931:19;29922:6;29888:63;;;29001:960;;;;;;;;;;;;;29968:256;30030:2;30024:9;30056:17;;;30131:18;30116:34;;30152:22;;;30113:62;30110:2;;;30188:1;30185;30178:12;30110:2;30204;30197:22;30008:216;;-1:-1;30008:216;30231:255;;30371:18;30363:6;30360:30;30357:2;;;30403:1;30400;30393:12;30357:2;-1:-1;30476:4;30447;30424:17;;;;-1:-1;;30420:33;30466:15;;30294:192;30761:137;30886:4;30874:17;;30855:43;31215:123;31321:12;;31305:33;32165:105;;32234:31;32259:5;32234:31;;32277:92;32350:13;32343:21;;32326:43;32376:127;;32464:1;32454:12;;32444:2;;32470:9;32653:129;;32743:1;32733:12;;32723:2;;32749:9;32789:128;-1:-1;;;;;32858:54;;32841:76;33221:139;;33318:1;33308:12;;33298:2;;33334:1;33331;33324:12;33367:132;;33457:1;33447:12;;33437:2;;33473:1;33470;33463:12;33592:133;;33679:41;33714:5;33679:41;;33890:137;;33979:43;34016:5;33979:43;;34035:145;34116:6;34111:3;34106;34093:30;-1:-1;34172:1;34154:16;;34147:27;34086:94;34189:268;34254:1;34261:101;34275:6;34272:1;34269:13;34261:101;;;34342:11;;;34336:18;34323:11;;;34316:39;34297:2;34290:10;34261:101;;;34377:6;34374:1;34371:13;34368:2;;;-1:-1;;34442:1;34424:16;;34417:27;34238:219;34465:97;34553:2;34533:14;-1:-1;;34529:28;;34513:49",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma experimental ABIEncoderV2;\npragma solidity >=0.4.25 <0.9.0;\n\nimport \"./Lots.sol\";\nimport \"./Users.sol\";\nimport \"./oss.sol\";\nimport \"./sms.sol\";\ncontract SupplyChain is Users, Lots, oss, sms {\n\n    function addLot(Types.Lot memory lot_, uint256 currentTime_)\n        public\n        userExists\n        onlyManufacturers\n    {\n\n        addALot(lot_, currentTime_);\n    }\n    \n    function addTransaction(Types.Transaction memory transaction_,string memory barcodeId_, uint256 currentTime_)\n        public\n        userExists\n    {\n        add_transaction(transaction_, barcodeId_, currentTime_);\n    }\n\n        function updateStockdate(string memory barcodeId_, uint256 newStockDate)\n        public\n        userExists\n        hasRole(Types.UserRole.database)\n    {\n        update_StockDate(barcodeId_, newStockDate);\n    }\n\n    function getAllTransactions() public view returns (Types.Transaction[] memory) {\n        return transactions;\n    }\n\n    function getAllLots() public view returns (Types.Lot[] memory) {\n        return lots;\n    }\n\n    function getMyAddress() public view  returns (address) {\n        return msg.sender;\n    }\n\n        function getMyLots() public view userExists returns (Types.Lot[] memory) {\n        return getUserLots();\n    }\n\n        function getSingleLot(string memory barcodeId_)\n        public\n        view\n        LotExists(barcodeId_)\n        returns (Types.Lot memory)\n    {\n        return getSpecificLot(barcodeId_);\n    }\n\n    function getSingleLotHistory(string memory barcodeId_)\n        public\n        view\n        LotExists(barcodeId_)\n        returns (Types.Lot memory, Types.LotHistory memory)\n    {\n        return getSpecificLotHistory(barcodeId_);\n    }\n\n    function getUserDetails(address id_)\n        public\n        view\n        otherUserExists(id_)\n        returns (Types.UserDetails memory)\n    {\n        return users[id_];\n    }\n\n    function getMyDetails() public view userExists returns (Types.UserDetails memory) {\n        return users[msg.sender];\n    }\n    \n}\n",
  "sourcePath": "/home/simo/sc/supplychain2/contracts/SupplyChain.sol",
  "ast": {
    "absolutePath": "/home/simo/sc/supplychain2/contracts/SupplyChain.sol",
    "exportedSymbols": {
      "SupplyChain": [
        474
      ]
    },
    "id": 475,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 306,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:33:2"
      },
      {
        "id": 307,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "70:32:2"
      },
      {
        "absolutePath": "/home/simo/sc/supplychain2/contracts/Lots.sol",
        "file": "./Lots.sol",
        "id": 308,
        "nodeType": "ImportDirective",
        "scope": 475,
        "sourceUnit": 272,
        "src": "104:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/simo/sc/supplychain2/contracts/Users.sol",
        "file": "./Users.sol",
        "id": 309,
        "nodeType": "ImportDirective",
        "scope": 475,
        "sourceUnit": 800,
        "src": "125:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/simo/sc/supplychain2/contracts/oss.sol",
        "file": "./oss.sol",
        "id": 310,
        "nodeType": "ImportDirective",
        "scope": 475,
        "sourceUnit": 853,
        "src": "147:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/simo/sc/supplychain2/contracts/sms.sol",
        "file": "./sms.sol",
        "id": 311,
        "nodeType": "ImportDirective",
        "scope": 475,
        "sourceUnit": 905,
        "src": "167:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 312,
              "name": "Users",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 799,
              "src": "211:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Users_$799",
                "typeString": "contract Users"
              }
            },
            "id": 313,
            "nodeType": "InheritanceSpecifier",
            "src": "211:5:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 314,
              "name": "Lots",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 271,
              "src": "218:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lots_$271",
                "typeString": "contract Lots"
              }
            },
            "id": 315,
            "nodeType": "InheritanceSpecifier",
            "src": "218:4:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 316,
              "name": "oss",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 852,
              "src": "224:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_oss_$852",
                "typeString": "contract oss"
              }
            },
            "id": 317,
            "nodeType": "InheritanceSpecifier",
            "src": "224:3:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 318,
              "name": "sms",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 904,
              "src": "229:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_sms_$904",
                "typeString": "contract sms"
              }
            },
            "id": 319,
            "nodeType": "InheritanceSpecifier",
            "src": "229:3:2"
          }
        ],
        "contractDependencies": [
          271,
          799,
          852,
          904
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 474,
        "linearizedBaseContracts": [
          474,
          904,
          852,
          271,
          799
        ],
        "name": "SupplyChain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "365:45:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 331,
                        "name": "lot_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "384:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                          "typeString": "struct Types.Lot memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 332,
                        "name": "currentTime_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "390:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                          "typeString": "struct Types.Lot memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 330,
                      "name": "addALot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "376:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lot_$515_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Types.Lot memory,uint256)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "376:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "376:27:2"
                }
              ]
            },
            "documentation": null,
            "id": 336,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 326,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 325,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 784,
                  "src": "324:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "324:10:2"
              },
              {
                "arguments": null,
                "id": 328,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 327,
                  "name": "onlyManufacturers",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 771,
                  "src": "343:17:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "343:17:2"
              }
            ],
            "name": "addLot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "name": "lot_",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "256:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                    "typeString": "struct Types.Lot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 320,
                    "name": "Types.Lot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 515,
                    "src": "256:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lot_$515_storage_ptr",
                      "typeString": "struct Types.Lot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "name": "currentTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "279:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "279:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "255:45:2"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:0:2"
            },
            "scope": 474,
            "src": "240:170:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 353,
              "nodeType": "Block",
              "src": "568:72:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "transaction_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "594:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Transaction_$547_memory_ptr",
                          "typeString": "struct Types.Transaction memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 349,
                        "name": "barcodeId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "608:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "currentTime_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "620:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Transaction_$547_memory_ptr",
                          "typeString": "struct Types.Transaction memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 347,
                      "name": "add_transaction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 851,
                      "src": "578:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Transaction_$547_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Types.Transaction memory,string memory,uint256)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "578:55:2"
                }
              ]
            },
            "documentation": null,
            "id": 354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 344,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 784,
                  "src": "553:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "553:10:2"
              }
            ],
            "name": "addTransaction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "name": "transaction_",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "444:37:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Transaction_$547_memory_ptr",
                    "typeString": "struct Types.Transaction"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 337,
                    "name": "Types.Transaction",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 547,
                    "src": "444:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Transaction_$547_storage_ptr",
                      "typeString": "struct Types.Transaction"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 340,
                  "name": "barcodeId_",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "482:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 342,
                  "name": "currentTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "508:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "443:86:2"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:2"
            },
            "scope": 474,
            "src": "420:220:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "802:59:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "barcodeId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "829:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "newStockDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "841:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 368,
                      "name": "update_StockDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "812:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "812:42:2"
                }
              ]
            },
            "documentation": null,
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 361,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 360,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 784,
                  "src": "746:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "746:10:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "Types",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "773:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Types_$548_$",
                          "typeString": "type(library Types)"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "UserRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 483,
                      "src": "773:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_UserRole_$483_$",
                        "typeString": "type(enum Types.UserRole)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "database",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "773:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$483",
                      "typeString": "enum Types.UserRole"
                    }
                  }
                ],
                "id": 366,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 362,
                  "name": "hasRole",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 744,
                  "src": "765:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_UserRole_$483_$",
                    "typeString": "modifier (enum Types.UserRole)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "765:32:2"
              }
            ],
            "name": "updateStockdate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "name": "barcodeId_",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "675:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 358,
                  "name": "newStockDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "701:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "674:48:2"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:0:2"
            },
            "scope": 474,
            "src": "650:211:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "946:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 380,
                    "name": "transactions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "963:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Transaction_$547_storage_$dyn_storage",
                      "typeString": "struct Types.Transaction storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 379,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "956:19:2"
                }
              ]
            },
            "documentation": null,
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTransactions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:2:2"
            },
            "returnParameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "918:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Transaction_$547_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Transaction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 376,
                      "name": "Types.Transaction",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 547,
                      "src": "918:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Transaction_$547_storage_ptr",
                        "typeString": "struct Types.Transaction"
                      }
                    },
                    "id": 377,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "918:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Transaction_$547_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Transaction[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "917:28:2"
            },
            "scope": 474,
            "src": "867:115:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "1051:28:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 389,
                    "name": "lots",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "1068:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Lot_$515_storage_$dyn_storage",
                      "typeString": "struct Types.Lot storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 388,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "1061:11:2"
                }
              ]
            },
            "documentation": null,
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllLots",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:2:2"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "1031:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Lot_$515_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Lot[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 385,
                      "name": "Types.Lot",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 515,
                      "src": "1031:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Lot_$515_storage_ptr",
                        "typeString": "struct Types.Lot"
                      }
                    },
                    "id": 386,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1031:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Lot_$515_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Lot[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1030:20:2"
            },
            "scope": 474,
            "src": "988:91:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "1140:34:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "1157:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1157:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 396,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "1150:17:2"
                }
              ]
            },
            "documentation": null,
            "id": 401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1106:2:2"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "1131:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1130:9:2"
            },
            "scope": 474,
            "src": "1085:89:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "1257:37:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 409,
                      "name": "getUserLots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1274:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_struct$_Lot_$515_memory_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (struct Types.Lot memory[] memory)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Lot_$515_memory_$dyn_memory_ptr",
                      "typeString": "struct Types.Lot memory[] memory"
                    }
                  },
                  "functionReturnParameters": 408,
                  "id": 411,
                  "nodeType": "Return",
                  "src": "1267:20:2"
                }
              ]
            },
            "documentation": null,
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 404,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 403,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 784,
                  "src": "1217:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1217:10:2"
              }
            ],
            "name": "getMyLots",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:2:2"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "1237:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Lot_$515_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Lot[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 405,
                      "name": "Types.Lot",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 515,
                      "src": "1237:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Lot_$515_storage_ptr",
                        "typeString": "struct Types.Lot"
                      }
                    },
                    "id": 406,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1237:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Lot_$515_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Lot[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1236:20:2"
            },
            "scope": 474,
            "src": "1184:110:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 427,
              "nodeType": "Block",
              "src": "1449:50:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 424,
                        "name": "barcodeId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "1481:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 423,
                      "name": "getSpecificLot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "1466:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_Lot_$515_memory_ptr_$",
                        "typeString": "function (string memory) view returns (struct Types.Lot memory)"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                      "typeString": "struct Types.Lot memory"
                    }
                  },
                  "functionReturnParameters": 422,
                  "id": 426,
                  "nodeType": "Return",
                  "src": "1459:33:2"
                }
              ]
            },
            "documentation": null,
            "id": 428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 418,
                    "name": "barcodeId_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 415,
                    "src": "1398:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 419,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 417,
                  "name": "LotExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 226,
                  "src": "1388:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1388:21:2"
              }
            ],
            "name": "getSingleLot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "name": "barcodeId_",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "1326:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1325:26:2"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "1427:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                    "typeString": "struct Types.Lot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 420,
                    "name": "Types.Lot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 515,
                    "src": "1427:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lot_$515_storage_ptr",
                      "typeString": "struct Types.Lot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1426:18:2"
            },
            "scope": 474,
            "src": "1304:195:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 444,
              "nodeType": "Block",
              "src": "1682:57:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "barcodeId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "1721:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 440,
                      "name": "getSpecificLotHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "1699:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_Lot_$515_memory_ptr_$_t_struct$_LotHistory_$532_memory_ptr_$",
                        "typeString": "function (string memory) view returns (struct Types.Lot memory,struct Types.LotHistory memory)"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Lot_$515_memory_ptr_$_t_struct$_LotHistory_$532_memory_ptr_$",
                      "typeString": "tuple(struct Types.Lot memory,struct Types.LotHistory memory)"
                    }
                  },
                  "functionReturnParameters": 439,
                  "id": 443,
                  "nodeType": "Return",
                  "src": "1692:40:2"
                }
              ]
            },
            "documentation": null,
            "id": 445,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 433,
                    "name": "barcodeId_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 430,
                    "src": "1606:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 434,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 432,
                  "name": "LotExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 226,
                  "src": "1596:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:21:2"
              }
            ],
            "name": "getSingleLotHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 430,
                  "name": "barcodeId_",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1534:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1534:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1533:26:2"
            },
            "returnParameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1635:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                    "typeString": "struct Types.Lot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 435,
                    "name": "Types.Lot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 515,
                    "src": "1635:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lot_$515_storage_ptr",
                      "typeString": "struct Types.Lot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1653:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LotHistory_$532_memory_ptr",
                    "typeString": "struct Types.LotHistory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 437,
                    "name": "Types.LotHistory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 532,
                    "src": "1653:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LotHistory_$532_storage_ptr",
                      "typeString": "struct Types.LotHistory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1634:43:2"
            },
            "scope": 474,
            "src": "1505:234:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "1886:34:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 455,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "1903:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDetails_$494_storage_$",
                        "typeString": "mapping(address => struct Types.UserDetails storage ref)"
                      }
                    },
                    "id": 457,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 456,
                      "name": "id_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "1909:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1903:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserDetails_$494_storage",
                      "typeString": "struct Types.UserDetails storage ref"
                    }
                  },
                  "functionReturnParameters": 454,
                  "id": 458,
                  "nodeType": "Return",
                  "src": "1896:17:2"
                }
              ]
            },
            "documentation": null,
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 450,
                    "name": "id_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 447,
                    "src": "1834:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 449,
                  "name": "otherUserExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 798,
                  "src": "1818:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1818:20:2"
              }
            ],
            "name": "getUserDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "name": "id_",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "1769:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1768:13:2"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "1856:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserDetails_$494_memory_ptr",
                    "typeString": "struct Types.UserDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 452,
                    "name": "Types.UserDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 494,
                    "src": "1856:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserDetails_$494_storage_ptr",
                      "typeString": "struct Types.UserDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1855:26:2"
            },
            "scope": 474,
            "src": "1745:175:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "2008:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 467,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "2025:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDetails_$494_storage_$",
                        "typeString": "mapping(address => struct Types.UserDetails storage ref)"
                      }
                    },
                    "id": 470,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 468,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "2031:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2031:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2025:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserDetails_$494_storage",
                      "typeString": "struct Types.UserDetails storage ref"
                    }
                  },
                  "functionReturnParameters": 466,
                  "id": 471,
                  "nodeType": "Return",
                  "src": "2018:24:2"
                }
              ]
            },
            "documentation": null,
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 463,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 462,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 784,
                  "src": "1962:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1962:10:2"
              }
            ],
            "name": "getMyDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1947:2:2"
            },
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "1982:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserDetails_$494_memory_ptr",
                    "typeString": "struct Types.UserDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 464,
                    "name": "Types.UserDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 494,
                    "src": "1982:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserDetails_$494_storage_ptr",
                      "typeString": "struct Types.UserDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1981:26:2"
            },
            "scope": 474,
            "src": "1926:123:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 475,
        "src": "187:1869:2"
      }
    ],
    "src": "36:2021:2"
  },
  "legacyAST": {
    "absolutePath": "/home/simo/sc/supplychain2/contracts/SupplyChain.sol",
    "exportedSymbols": {
      "SupplyChain": [
        474
      ]
    },
    "id": 475,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 306,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:33:2"
      },
      {
        "id": 307,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "70:32:2"
      },
      {
        "absolutePath": "/home/simo/sc/supplychain2/contracts/Lots.sol",
        "file": "./Lots.sol",
        "id": 308,
        "nodeType": "ImportDirective",
        "scope": 475,
        "sourceUnit": 272,
        "src": "104:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/simo/sc/supplychain2/contracts/Users.sol",
        "file": "./Users.sol",
        "id": 309,
        "nodeType": "ImportDirective",
        "scope": 475,
        "sourceUnit": 800,
        "src": "125:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/simo/sc/supplychain2/contracts/oss.sol",
        "file": "./oss.sol",
        "id": 310,
        "nodeType": "ImportDirective",
        "scope": 475,
        "sourceUnit": 853,
        "src": "147:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/simo/sc/supplychain2/contracts/sms.sol",
        "file": "./sms.sol",
        "id": 311,
        "nodeType": "ImportDirective",
        "scope": 475,
        "sourceUnit": 905,
        "src": "167:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 312,
              "name": "Users",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 799,
              "src": "211:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Users_$799",
                "typeString": "contract Users"
              }
            },
            "id": 313,
            "nodeType": "InheritanceSpecifier",
            "src": "211:5:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 314,
              "name": "Lots",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 271,
              "src": "218:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lots_$271",
                "typeString": "contract Lots"
              }
            },
            "id": 315,
            "nodeType": "InheritanceSpecifier",
            "src": "218:4:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 316,
              "name": "oss",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 852,
              "src": "224:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_oss_$852",
                "typeString": "contract oss"
              }
            },
            "id": 317,
            "nodeType": "InheritanceSpecifier",
            "src": "224:3:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 318,
              "name": "sms",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 904,
              "src": "229:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_sms_$904",
                "typeString": "contract sms"
              }
            },
            "id": 319,
            "nodeType": "InheritanceSpecifier",
            "src": "229:3:2"
          }
        ],
        "contractDependencies": [
          271,
          799,
          852,
          904
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 474,
        "linearizedBaseContracts": [
          474,
          904,
          852,
          271,
          799
        ],
        "name": "SupplyChain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "365:45:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 331,
                        "name": "lot_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "384:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                          "typeString": "struct Types.Lot memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 332,
                        "name": "currentTime_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "390:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                          "typeString": "struct Types.Lot memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 330,
                      "name": "addALot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "376:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lot_$515_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Types.Lot memory,uint256)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "376:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "376:27:2"
                }
              ]
            },
            "documentation": null,
            "id": 336,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 326,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 325,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 784,
                  "src": "324:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "324:10:2"
              },
              {
                "arguments": null,
                "id": 328,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 327,
                  "name": "onlyManufacturers",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 771,
                  "src": "343:17:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "343:17:2"
              }
            ],
            "name": "addLot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "name": "lot_",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "256:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                    "typeString": "struct Types.Lot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 320,
                    "name": "Types.Lot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 515,
                    "src": "256:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lot_$515_storage_ptr",
                      "typeString": "struct Types.Lot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "name": "currentTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "279:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "279:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "255:45:2"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:0:2"
            },
            "scope": 474,
            "src": "240:170:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 353,
              "nodeType": "Block",
              "src": "568:72:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "transaction_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "594:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Transaction_$547_memory_ptr",
                          "typeString": "struct Types.Transaction memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 349,
                        "name": "barcodeId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "608:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "currentTime_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "620:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Transaction_$547_memory_ptr",
                          "typeString": "struct Types.Transaction memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 347,
                      "name": "add_transaction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 851,
                      "src": "578:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Transaction_$547_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Types.Transaction memory,string memory,uint256)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "578:55:2"
                }
              ]
            },
            "documentation": null,
            "id": 354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 344,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 784,
                  "src": "553:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "553:10:2"
              }
            ],
            "name": "addTransaction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "name": "transaction_",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "444:37:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Transaction_$547_memory_ptr",
                    "typeString": "struct Types.Transaction"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 337,
                    "name": "Types.Transaction",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 547,
                    "src": "444:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Transaction_$547_storage_ptr",
                      "typeString": "struct Types.Transaction"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 340,
                  "name": "barcodeId_",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "482:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 342,
                  "name": "currentTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "508:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "443:86:2"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:2"
            },
            "scope": 474,
            "src": "420:220:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "802:59:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "barcodeId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "829:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "newStockDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "841:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 368,
                      "name": "update_StockDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "812:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "812:42:2"
                }
              ]
            },
            "documentation": null,
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 361,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 360,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 784,
                  "src": "746:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "746:10:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "Types",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "773:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Types_$548_$",
                          "typeString": "type(library Types)"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "UserRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 483,
                      "src": "773:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_UserRole_$483_$",
                        "typeString": "type(enum Types.UserRole)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "database",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "773:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$483",
                      "typeString": "enum Types.UserRole"
                    }
                  }
                ],
                "id": 366,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 362,
                  "name": "hasRole",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 744,
                  "src": "765:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_UserRole_$483_$",
                    "typeString": "modifier (enum Types.UserRole)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "765:32:2"
              }
            ],
            "name": "updateStockdate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "name": "barcodeId_",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "675:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 358,
                  "name": "newStockDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "701:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "674:48:2"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:0:2"
            },
            "scope": 474,
            "src": "650:211:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "946:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 380,
                    "name": "transactions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "963:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Transaction_$547_storage_$dyn_storage",
                      "typeString": "struct Types.Transaction storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 379,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "956:19:2"
                }
              ]
            },
            "documentation": null,
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTransactions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:2:2"
            },
            "returnParameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "918:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Transaction_$547_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Transaction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 376,
                      "name": "Types.Transaction",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 547,
                      "src": "918:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Transaction_$547_storage_ptr",
                        "typeString": "struct Types.Transaction"
                      }
                    },
                    "id": 377,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "918:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Transaction_$547_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Transaction[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "917:28:2"
            },
            "scope": 474,
            "src": "867:115:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "1051:28:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 389,
                    "name": "lots",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "1068:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Lot_$515_storage_$dyn_storage",
                      "typeString": "struct Types.Lot storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 388,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "1061:11:2"
                }
              ]
            },
            "documentation": null,
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllLots",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:2:2"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "1031:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Lot_$515_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Lot[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 385,
                      "name": "Types.Lot",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 515,
                      "src": "1031:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Lot_$515_storage_ptr",
                        "typeString": "struct Types.Lot"
                      }
                    },
                    "id": 386,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1031:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Lot_$515_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Lot[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1030:20:2"
            },
            "scope": 474,
            "src": "988:91:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "1140:34:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "1157:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1157:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 396,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "1150:17:2"
                }
              ]
            },
            "documentation": null,
            "id": 401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1106:2:2"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "1131:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1130:9:2"
            },
            "scope": 474,
            "src": "1085:89:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "1257:37:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 409,
                      "name": "getUserLots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1274:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_struct$_Lot_$515_memory_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (struct Types.Lot memory[] memory)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Lot_$515_memory_$dyn_memory_ptr",
                      "typeString": "struct Types.Lot memory[] memory"
                    }
                  },
                  "functionReturnParameters": 408,
                  "id": 411,
                  "nodeType": "Return",
                  "src": "1267:20:2"
                }
              ]
            },
            "documentation": null,
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 404,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 403,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 784,
                  "src": "1217:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1217:10:2"
              }
            ],
            "name": "getMyLots",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:2:2"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "1237:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Lot_$515_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Lot[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 405,
                      "name": "Types.Lot",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 515,
                      "src": "1237:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Lot_$515_storage_ptr",
                        "typeString": "struct Types.Lot"
                      }
                    },
                    "id": 406,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1237:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Lot_$515_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Lot[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1236:20:2"
            },
            "scope": 474,
            "src": "1184:110:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 427,
              "nodeType": "Block",
              "src": "1449:50:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 424,
                        "name": "barcodeId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "1481:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 423,
                      "name": "getSpecificLot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "1466:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_Lot_$515_memory_ptr_$",
                        "typeString": "function (string memory) view returns (struct Types.Lot memory)"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                      "typeString": "struct Types.Lot memory"
                    }
                  },
                  "functionReturnParameters": 422,
                  "id": 426,
                  "nodeType": "Return",
                  "src": "1459:33:2"
                }
              ]
            },
            "documentation": null,
            "id": 428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 418,
                    "name": "barcodeId_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 415,
                    "src": "1398:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 419,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 417,
                  "name": "LotExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 226,
                  "src": "1388:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1388:21:2"
              }
            ],
            "name": "getSingleLot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "name": "barcodeId_",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "1326:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1325:26:2"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "1427:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                    "typeString": "struct Types.Lot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 420,
                    "name": "Types.Lot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 515,
                    "src": "1427:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lot_$515_storage_ptr",
                      "typeString": "struct Types.Lot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1426:18:2"
            },
            "scope": 474,
            "src": "1304:195:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 444,
              "nodeType": "Block",
              "src": "1682:57:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "barcodeId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "1721:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 440,
                      "name": "getSpecificLotHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "1699:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_Lot_$515_memory_ptr_$_t_struct$_LotHistory_$532_memory_ptr_$",
                        "typeString": "function (string memory) view returns (struct Types.Lot memory,struct Types.LotHistory memory)"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Lot_$515_memory_ptr_$_t_struct$_LotHistory_$532_memory_ptr_$",
                      "typeString": "tuple(struct Types.Lot memory,struct Types.LotHistory memory)"
                    }
                  },
                  "functionReturnParameters": 439,
                  "id": 443,
                  "nodeType": "Return",
                  "src": "1692:40:2"
                }
              ]
            },
            "documentation": null,
            "id": 445,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 433,
                    "name": "barcodeId_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 430,
                    "src": "1606:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 434,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 432,
                  "name": "LotExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 226,
                  "src": "1596:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:21:2"
              }
            ],
            "name": "getSingleLotHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 430,
                  "name": "barcodeId_",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1534:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1534:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1533:26:2"
            },
            "returnParameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1635:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lot_$515_memory_ptr",
                    "typeString": "struct Types.Lot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 435,
                    "name": "Types.Lot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 515,
                    "src": "1635:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lot_$515_storage_ptr",
                      "typeString": "struct Types.Lot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1653:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LotHistory_$532_memory_ptr",
                    "typeString": "struct Types.LotHistory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 437,
                    "name": "Types.LotHistory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 532,
                    "src": "1653:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LotHistory_$532_storage_ptr",
                      "typeString": "struct Types.LotHistory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1634:43:2"
            },
            "scope": 474,
            "src": "1505:234:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "1886:34:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 455,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "1903:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDetails_$494_storage_$",
                        "typeString": "mapping(address => struct Types.UserDetails storage ref)"
                      }
                    },
                    "id": 457,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 456,
                      "name": "id_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "1909:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1903:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserDetails_$494_storage",
                      "typeString": "struct Types.UserDetails storage ref"
                    }
                  },
                  "functionReturnParameters": 454,
                  "id": 458,
                  "nodeType": "Return",
                  "src": "1896:17:2"
                }
              ]
            },
            "documentation": null,
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 450,
                    "name": "id_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 447,
                    "src": "1834:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 449,
                  "name": "otherUserExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 798,
                  "src": "1818:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1818:20:2"
              }
            ],
            "name": "getUserDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "name": "id_",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "1769:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1768:13:2"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "1856:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserDetails_$494_memory_ptr",
                    "typeString": "struct Types.UserDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 452,
                    "name": "Types.UserDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 494,
                    "src": "1856:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserDetails_$494_storage_ptr",
                      "typeString": "struct Types.UserDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1855:26:2"
            },
            "scope": 474,
            "src": "1745:175:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "2008:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 467,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "2025:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserDetails_$494_storage_$",
                        "typeString": "mapping(address => struct Types.UserDetails storage ref)"
                      }
                    },
                    "id": 470,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 468,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "2031:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2031:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2025:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserDetails_$494_storage",
                      "typeString": "struct Types.UserDetails storage ref"
                    }
                  },
                  "functionReturnParameters": 466,
                  "id": 471,
                  "nodeType": "Return",
                  "src": "2018:24:2"
                }
              ]
            },
            "documentation": null,
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 463,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 462,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 784,
                  "src": "1962:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1962:10:2"
              }
            ],
            "name": "getMyDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1947:2:2"
            },
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "1982:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserDetails_$494_memory_ptr",
                    "typeString": "struct Types.UserDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 464,
                    "name": "Types.UserDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 494,
                    "src": "1982:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserDetails_$494_storage_ptr",
                      "typeString": "struct Types.UserDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1981:26:2"
            },
            "scope": 474,
            "src": "1926:123:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 475,
        "src": "187:1869:2"
      }
    ],
    "src": "36:2021:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xd5106C3ad2c4D36BfaafecaF71414910c7dE156A",
      "transactionHash": "0x191e965bfb1d256a53f76bce0ed43fe31543af3e9e3b6b78cf76c808be8eff87"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2023-12-23T16:19:52.069Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}